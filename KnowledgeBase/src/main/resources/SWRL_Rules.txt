MotorMaximalSpeedSatisfyRule:
Motor(?m) ^ hasCurrentRequirement(?m, ?r) ^ hasConstant(?m, ?con) ^
hasNominalRotationSpeed_n_max_unit_rpm(?m, ?n_motor) ^ hasMaximalSpeedReqMax_n_max_unit_rpm(?r, ?n_req_max) ^ hasMaximalSpeedReqMin_n_max_unit_rpm(?r, ?n_req_min) ^ hasGearBoxRation_i_min(?con, ?i_min) ^ hasGearBoxRation_i_max(?con, ?i_max) ^
swrlb:divide(?n_res_min, ?n_motor, ?i_max) ^ swrlb:lessThanOrEqual(?n_res_min, ?n_req_max) ^
swrlb:divide(?n_res_max, ?n_motor, ?i_min) ^ swrlb:greaterThanOrEqual(?n_res_max, ?n_req_min)
-> SatisfiedRotationSpeed(?m)

MotorPeakTorqueCalc1Rule:
Motor(?m) ^ hasCurrentRequirement(?m, ?r) ^
hasPeakTorque_T_max_unit_Nm(?m, ?M_p) ^ hasPeakTorque_T_max_percentage(?r, ?M_per) ^ hasPeakTorqueType_motor(?r, ?T_type) ^ hasEfficiencyOther_percentage(?r, ?o_perc) ^
swrlb:equal(?T_type, "T_max") ^
swrlb:divide(?M_fac, ?M_per, 100.0) ^ swrlb:multiply(?temp1, ?M_p, ?M_fac) ^ swrlb:divide(?o_fac, ?o_perc, 100.0) ^ swrlb:multiply(?M_res, ?temp1, ?o_fac)
-> has1(?m, ?M_res)

MotorPeakTorqueCalc2Rule:
Motor(?m) ^ hasCurrentRequirement(?m, ?r) ^
hasNominalTorque_T_n_unit_Nm(?m, ?T_n) ^ hasPeakTorque_T_max_percentage(?r, ?M_per) ^ hasPeakTorqueType_motor(?r, ?T_type) ^ hasEfficiencyOther_percentage(?r, ?o_perc) ^
swrlb:equal(?T_type, "T_n") ^
swrlb:divide(?M_fac, ?M_per, 100.0) ^ swrlb:multiply(?temp1, ?T_n, ?M_fac) ^ swrlb:divide(?o_fac, ?o_perc, 100.0) ^ swrlb:multiply(?M_res, ?temp1, ?o_fac)
-> has1(?m, ?M_res)



MotorPeakTorqueSatisfyRule:
Motor(?m) ^ hasCurrentRequirement(?m, ?r) ^ hasConstant(?m, ?con) ^
has1(?m, ?M_peak) ^ hasPeakTorqueReqMin_T_max_unit_Nm(?r, ?M_req_min) ^ hasGearBoxRation_i_max(?con, ?i_max) ^
swrlb:multiply(?M_res_max, ?M_peak, ?i_max) ^ swrlb:greaterThanOrEqual(?M_res_max, ?M_req_min)
-> SatisfiedPeakTorque(?m)


MotorVoltageSatisfy1Rule:
Motor(?m) ^ hasCurrentRequirement(?m, ?r) ^
hasVoltageReq_U_unit_V(?r, ?v_req) ^
swrlb:equal(?v_req, "Any V")
-> SatisfiedVoltage(?m)

MotorVoltageSatisfy2Rule:
Motor(?m) ^ hasCurrentRequirement(?m, ?r) ^
hasVoltage_U_unit_V(?m, ?U_m) ^ hasVoltageReq_U_unit_V(?r, ?v_req) ^
swrlb:equal(?v_req, "24 V") ^ swrlb:equal(?U_m, 24.0)
-> SatisfiedVoltage(?m)

MotorVoltageSatisfy3Rule:
Motor(?m) ^ hasCurrentRequirement(?m, ?r) ^
hasVoltage_U_unit_V(?m, ?U_m) ^ hasVoltageReq_U_unit_V(?r, ?v_req) ^
swrlb:equal(?v_req, "48 V") ^ swrlb:equal(?U_m, 48.0)
-> SatisfiedVoltage(?m)



MotorLengthMaxSatisfyRule:
Motor(?m) ^ hasCurrentRequirement(?m, ?r) ^
hasDimensionLength_L_unit_mm(?m, ?L_m) ^ hasDimensionLengthReqMax_L_unit_mm(?r, ?L_req_max) ^
swrlb:lessThanOrEqual(?L_m, ?L_req_max)
-> SatisfiedDimensionLengthMax(?m)

MotorOuterDiameterMaxSatisfyRule:
Motor(?m) ^ hasCurrentRequirement(?m, ?r) ^
hasDimensionOuterDiameter_D_unit_mm(?m, ?D_m) ^ hasDimensionOuterDiameterReqMax_D_unit_mm(?r, ?D_req_max) ^
swrlb:lessThanOrEqual(?D_m, ?D_req_max)
-> SatisfiedOuterDiameterMax(?m)

MotorWeightMaxSatisfyRule:
Motor(?m) ^ hasCurrentRequirement(?m, ?r) ^
hasWeight_m_unit_kg(?m, ?m_m) ^ hasWeightReqMax_m_unit_kg(?r, ?m_req_max) ^
swrlb:lessThanOrEqual(?m_m, ?m_req_max)
-> SatisfiedWeightMax(?m)



MotorSatisfyRule:
Motor(?m) ^
SatisfiedRotationSpeed(?m) ^ SatisfiedPeakTorque(?m) ^ SatisfiedVoltage(?m) ^ SatisfiedDimensionLengthMax(?m) ^ SatisfiedOuterDiameterMax(?m) ^ SatisfiedWeightMax(?m)
-> SatisfiedMotor(?m)


MotorMotorBrakeMatch1Rule:
SatisfiedMotor(?m) ^ NoMotorBrake(?mb) ^ hasCurrentRequirement(?m, ?r) ^
needMotorBrake(?r, ?nmb) ^
swrlb:equal(?nmb, false)
-> SatisfiedMotorWithBrake(?m) ^ hasMotorBrake(?m, ?mb)

MotorMotorBrakeMatch2Rule:
SatisfiedMotor(?m) ^ MotorBrake(?mb) ^ hasCurrentRequirement(?m, ?r) ^
needMotorBrake(?r, ?nmb) ^
swrlb:equal(?nmb, true) ^
hasMatchingIdentifier(?m, ?mi_m) ^ hasMatchingIdentifier(?mb, ?mi_mb) ^
swrlb:equal(?mi_m, ?mi_mb) ^
-> SatisfiedMotorWithBrake(?m) ^ hasMotorBrake(?m, ?mb)



GearBoxMaximalSpeedSatisfyRule:
GearBox(?g) ^ hasCurrentRequirement(?g, ?r) ^
hasGearBoxRation_i(?g, ?i) ^ hasMaxRotationInputSpeedGrease_n_max_unit_rpm(?g, ?n_max) ^ hasMaximalSpeedReqMin_n_max_unit_rpm(?r, ?n_req_min) ^
swrlb:divide(?n_max_res, ?n_max, ?i) ^
swrlb:greaterThanOrEqual(?n_max_res, ?n_req_min)
-> SatisfiedRotationSpeed(?g)



GearBoxPeakTorqueCalc1Rule:
GearBox(?g) ^ hasCurrentRequirement(?g, ?r) ^
hasPeakTorqueType_gearBox(?r, ?T_type) ^ swrlb:equal(?T_type, "T_repeated") ^
hasRepeatedPeakTorque_T_R_unit_Nm(?g, ?T_R)
-> hasPeakTorque_T_max_unit_Nm(?g, ?T_R)

GearBoxPeakTorqueCalc2Rule:
GearBox(?g) ^ hasCurrentRequirement(?g, ?r) ^
hasPeakTorqueType_gearBox(?r, ?T_type) ^ swrlb:equal(?T_type, "T_momentary") ^
hasMomentaryPeakTorque_T_M_unit_Nm(?g, ?T_M)
-> hasPeakTorque_T_max_unit_Nm(?g, ?T_M)


GearBoxPeakTorqueSatisfyRule:
GearBox(?g) ^ hasCurrentRequirement(?g, ?r) ^
hasPeakTorque_T_max_unit_Nm(?g, ?T_max) ^ hasPeakTorqueReqMin_T_max_unit_Nm(?r, ?M_req_min) ^
swrlb:greaterThanOrEqual(?T_max, ?M_req_min)
-> SatisfiedPeakTorque(?g)


GearBoxLengthMaxSatisfyRule:
GearBox(?g) ^ hasCurrentRequirement(?g, ?r) ^
hasDimensionLength_L_unit_mm(?g, ?L_g) ^ hasDimensionLengthReqMax_L_unit_mm(?r, ?L_req_max) ^
swrlb:lessThanOrEqual(?L_g, ?L_req_max)
-> SatisfiedDimensionLengthMax(?g)

GearBoxOuterDiameterMaxSatisfyRule:
GearBox(?g) ^ hasCurrentRequirement(?g, ?r) ^
hasDimensionOuterDiameter_D_unit_mm(?g, ?D_g) ^ hasDimensionOuterDiameterReqMax_D_unit_mm(?r, ?D_req_max) ^
swrlb:lessThanOrEqual(?D_g, ?D_req_max)
-> SatisfiedOuterDiameterMax(?g)

GearBoxWeightMaxSatisfyRule:
GearBox(?g) ^ hasCurrentRequirement(?g, ?r) ^
hasWeight_m_unit_kg(?g, ?m_g) ^ hasWeightReqMax_m_unit_kg(?r, ?m_req_max) ^
swrlb:lessThanOrEqual(?m_g, ?m_req_max)
-> SatisfiedWeightMax(?g)


GearBoxSatisfyRule:
GearBox(?g) ^
SatisfiedRotationSpeed(?g) ^ SatisfiedPeakTorque(?g) ^ SatisfiedDimensionLengthMax(?g) ^ SatisfiedOuterDiameterMax(?g) ^ SatisfiedWeightMax(?g)
-> SatisfiedGearBox(?g)




MotorGearBoxMatchMaximalSpeedCalcRule:
MotorGearBoxMatch(?ma) ^ hasMotor(?ma, ?m) ^ hasGearBox(?ma, ?g) ^
hasNominalRotationSpeed_n_max_unit_rpm(?m, ?n_motor) ^ hasGearBoxRation_i(?g, ?i) ^ hasMaxRotationInputSpeedGrease_n_max_unit_rpm(?g, ?n_max) ^
swrlb:divide(?n_max1, ?n_motor, ?i) ^ swrlb:divide(?n_max2, ?n_max, ?i)
-> hasMax1_1(?ma, ?n_max1) ^ hasMax1_2(?ma, ?n_max2)


MotorGearBoxMatchMaximalSpeedEvaluate1Rule:
MotorGearBoxMatch(?ma) ^
hasMax1_1(?ma, ?n_max1) ^ hasMax1_2(?ma, ?n_max2) ^
swrlb:greaterThan(?n_max1, ?n_max2)
-> hasMaximalSpeedRes_n_max_unit_rpm(?ma, ?n_max2)

MotorGearBoxMatchMaximalSpeedEvaluate2Rule:
MotorGearBoxMatch(?ma) ^
hasMax1_1(?ma, ?n_max1) ^ hasMax1_2(?ma, ?n_max2) ^
swrlb:lessThanOrEqual(?n_max1, ?n_max2)
-> hasMaximalSpeedRes_n_max_unit_rpm(?ma, ?n_max1)


MotorGearBoxMatchMaximalSpeedSatisfyRule:
MotorGearBoxMatch(?ma) ^ hasCurrentRequirement(?ma, ?r) ^
hasMaximalSpeedRes_n_max_unit_rpm(?ma, ?n_res) ^ hasMaximalSpeedReqMax_n_max_unit_rpm(?r, ?n_req_max) ^ hasMaximalSpeedReqMin_n_max_unit_rpm(?r, ?n_req_min) ^
swrlb:lessThanOrEqual(?n_res, ?n_req_max) ^ swrlb:greaterThanOrEqual(?n_res, ?n_req_min) ^
-> SatisfiedRotationSpeed(?ma)



MotorGearBoxMatchPeakTorqueCalc1Rule:
MotorGearBoxMatch(?ma) ^ hasMotor(?ma, ?m) ^ hasGearBox(?ma, ?g) ^ hasCurrentRequirement(?ma, ?r) ^
useEfficiencyGearBox(?r, ?uegb) ^
swrlb:equal(?uegb, false) ^
has1(?m, ?M_peak) ^ hasGearBoxRation_i(?g, ?i) ^
swrlb:multiply(?M_res, ?M_peak, ?i)
-> has1(?ma, ?M_res)

MotorGearBoxMatchPeakTorqueCalc2Rule:
MotorGearBoxMatch(?ma) ^ hasMotor(?ma, ?m) ^ hasGearBox(?ma, ?g) ^ hasCurrentRequirement(?ma, ?r) ^
useEfficiencyGearBox(?r, ?uegb) ^
swrlb:equal(?uegb, true) ^
has1(?m, ?M_peak) ^ hasGearBoxRation_i(?g, ?i) ^ hasMaximalEfficiency_percentage(?g, ?g_perc)
swrlb:divide(?g_fac, ?g_perc, 100.0) ^ swrlb:multiply(?temp1, ?M_peak, ?g_fac) ^ swrlb:multiply(?M_res, ?temp1, ?i)
-> hasMax2_1(?ma, ?M_res)


MotorGearBoxMatchPeakTorqueEvaluate1Rule:
MotorGearBoxMatch(?ma) ^ hasGearBox(?ma, ?g) ^
hasMax2_1(?ma, ?T_max1) ^ hasPeakTorque_T_max_unit_Nm(?g, ?T_max2) ^
swrlb:greaterThan(?T_max1, ?T_max2)
-> hasPeakTorqueRes_T_max_unit_Nm(?ma, ?T_max2)

MotorGearBoxMatchPeakTorqueEvaluate2Rule:
MotorGearBoxMatch(?ma) ^ hasGearBox(?ma, ?g) ^
hasMax2_1(?ma, ?T_max1) ^ hasPeakTorque_T_max_unit_Nm(?g, ?T_max2) ^
swrlb:lessThanOrEqual(?T_max1, ?T_max2)
-> hasPeakTorqueRes_T_max_unit_Nm(?ma, ?T_max1)


MotorGearBoxMatchPeakTorqueSatisfy1Rule:
MotorGearBoxMatch(?ma) ^ hasCurrentRequirement(?ma, ?r) ^
hasPeakTorqueRes_T_max_unit_Nm(?ma, ?M_res) ^
hasPeakTorqueReqMax_T_max_unit_Nm(?r, ?M_req_max) ^ swrlb:lessThanOrEqual(?M_res, ?M_req_max) ^
hasPeakTorqueReqMin_T_max_unit_Nm(?r, ?M_req_min) ^ swrlb:greaterThanOrEqual(?M_res, ?M_req_min) ^
removeSmallGearBoxesWithBigMotors(?r, ?rsgwbm) ^ swrlb:equal(?rsgwbm, false)
-> SatisfiedPeakTorque(?ma)

MotorGearBoxMatchPeakTorqueSatisfy2Rule:
MotorGearBoxMatch(?ma) ^ hasCurrentRequirement(?ma, ?r) ^
hasPeakTorqueRes_T_max_unit_Nm(?ma, ?M_res) ^
hasPeakTorqueReqMax_T_max_unit_Nm(?r, ?M_req_max) ^ swrlb:lessThanOrEqual(?M_res, ?M_req_max) ^
hasPeakTorqueReqMin_T_max_unit_Nm(?r, ?M_req_min) ^ swrlb:greaterThanOrEqual(?M_res, ?M_req_min) ^
removeSmallGearBoxesWithBigMotors(?r, ?rsgwbm) ^ swrlb:equal(?rsgwbm, true) ^
hasMotor(?ma, ?m) ^ hasGearBox(?ma, ?g) ^
has1(?m, ?M_peak) ^ hasPeakTorque_T_max_unit_Nm(?g, ?g_max) ^
swrlb:divide(?M_peak2, ?M_peak, 2.0) ^ swrlb:lessThanOrEqual(?M_peak2, ?g_max)
-> SatisfiedPeakTorque(?ma)



MotorGearBoxMatchLengthCalcRule:
MotorGearBoxMatch(?ma) ^ hasMotor(?ma, ?m) ^ hasGearBox(?ma, ?g) ^ hasMotorBrake(?m, ?mb) ^
hasDimensionLength_L_unit_mm(?m, ?L_m) ^ hasDimensionLength_L_unit_mm(?g, ?L_g) ^ hasDimensionLength_L_unit_mm(?mb, ?L_mb) ^
swrlb:add(?L_temp, ?L_m, ?L_g) ^ swrlb:add(?L_ges, ?L_temp, ?L_mb)
-> hasDimensionLength_L_unit_mm(?ma, ?L_ges)

MotorGearBoxMatchLengthSatisfyRule:
MotorGearBoxMatch(?ma) ^ hasDimensionLength_L_unit_mm(?ma, ?L_ges) ^ hasCurrentRequirement(?ma, ?r) ^ hasDimensionLengthReqMax_L_unit_mm(?r, ?L_req_max) ^ swrlb:lessThanOrEqual(?L_ges, ?L_req_max) ^ hasDimensionLengthReqMin_L_unit_mm(?r, ?L_req_min) ^ swrlb:greaterThanOrEqual(?L_ges, ?L_req_min) -> SatisfiedDimensionLength(?ma)

MotorGearBoxMatchLengthMaxSatisfyRule:
MotorGearBoxMatch(?ma) ^ hasDimensionLength_L_unit_mm(?ma, ?L_ges) ^ hasCurrentRequirement(?ma, ?r) ^ hasDimensionLengthReqMax_L_unit_mm(?r, ?L_req_max) ^ swrlb:lessThanOrEqual(?L_ges, ?L_req_max) -> SatisfiedDimensionLengthMax(?ma)



MotorGearBoxMatchOuterDiameter1CalcRule:
MotorGearBoxMatch(?ma) ^ hasMotor(?ma, ?m) ^ hasGearBox(?ma, ?g) ^ hasDimensionOuterDiameter_D_unit_mm(?m, ?D_m) ^ hasDimensionOuterDiameter_D_unit_mm(?g, ?D_g) ^ swrlb:greaterThan(?D_m, ?D_g) -> hasDimensionOuterDiameter_D_unit_mm(?ma, ?D_m)

MotorGearBoxMatchOuterDiameter2CalcRule:
MotorGearBoxMatch(?ma) ^ hasMotor(?ma, ?m) ^ hasGearBox(?ma, ?g) ^ hasDimensionOuterDiameter_D_unit_mm(?m, ?D_m) ^ hasDimensionOuterDiameter_D_unit_mm(?g, ?D_g) ^ swrlb:lessThanOrEqual(?D_m, ?D_g) -> hasDimensionOuterDiameter_D_unit_mm(?ma, ?D_g)


MotorGearBoxMatchOuterDiameterSatisfyRule:
MotorGearBoxMatch(?ma) ^ hasDimensionOuterDiameter_D_unit_mm(?ma, ?D_ges) ^ hasCurrentRequirement(?ma, ?r) ^ hasDimensionOuterDiameterReqMax_D_unit_mm(?r, ?D_req_max) ^ swrlb:lessThanOrEqual(?D_ges, ?D_req_max) ^ hasDimensionOuterDiameterReqMin_D_unit_mm(?r, ?D_req_min) ^ swrlb:greaterThanOrEqual(?D_ges, ?D_req_min) -> SatisfiedOuterDiameter(?ma)

MotorGearBoxMatchOuterDiameterMaxSatisfyRule:
MotorGearBoxMatch(?ma) ^ hasDimensionOuterDiameter_D_unit_mm(?ma, ?D_ges) ^ hasCurrentRequirement(?ma, ?r) ^ hasDimensionOuterDiameterReqMax_D_unit_mm(?r, ?D_req_max) ^ swrlb:lessThanOrEqual(?D_ges, ?D_req_max) -> SatisfiedOuterDiameterMax(?ma)



MotorGearBoxMatchWeightCalcRule:
MotorGearBoxMatch(?ma) ^ hasMotor(?ma, ?m) ^ hasGearBox(?ma, ?g) ^ hasMotorBrake(?m, ?mb) ^
hasWeight_m_unit_kg(?m, ?m_m) ^ hasWeight_m_unit_kg(?g, ?m_g) ^ hasWeight_m_unit_kg(?mb, ?m_mb) ^
swrlb:add(?m_temp, ?m_m, ?m_g) ^ swrlb:add(?m_ges, ?m_temp, ?m_mb)
-> hasWeight_m_unit_kg(?ma, ?m_ges)

MotorGearBoxMatchWeightSatisfyRule:
MotorGearBoxMatch(?ma) ^ hasWeight_m_unit_kg(?ma, ?m_ges) ^ hasCurrentRequirement(?ma, ?r) ^ hasWeightReqMax_m_unit_kg(?r, ?m_req_max) ^ swrlb:lessThanOrEqual(?m_ges, ?m_req_max) ^ hasWeightReqMin_m_unit_kg(?r, ?m_req_min) ^ swrlb:greaterThanOrEqual(?m_ges, ?m_req_min) -> SatisfiedWeight(?ma)

MotorGearBoxMatchWeightMaxSatisfyRule:
MotorGearBoxMatch(?ma) ^ hasWeight_m_unit_kg(?ma, ?m_ges) ^ hasCurrentRequirement(?ma, ?r) ^ hasWeightReqMax_m_unit_kg(?r, ?m_req_max) ^ swrlb:lessThanOrEqual(?m_ges, ?m_req_max) -> SatisfiedWeightMax(?ma)



MotorGearBoxMatchSatisfyRule:
MotorGearBoxMatch(?ma) ^ SatisfiedRotationSpeed(?ma) ^ SatisfiedPeakTorque(?ma) ^ SatisfiedDimensionLength(?ma) ^ SatisfiedOuterDiameter(?ma) ^ SatisfiedWeight(?ma) ^ hasMotor(?ma, ?m) ^ hasMotorBrake(?m, ?mb) ^ hasGearBox(?ma, ?g)
-> SatisfiedMotorGearBoxMatch(?ma) ^ isComposedOfMotor(?ma, ?m) ^ isComposedOfGearBox(?ma, ?g) ^ isComposedOfMotorBrake(?ma, ?mb) ^ hasComplianceIndex(?ma, 1.0) ^ hasPerformanceIndex(?ma, 1.0)

MotorGearBoxMatchForSACunitSatisfyRule:
MotorGearBoxMatch(?ma) ^ SatisfiedRotationSpeed(?ma) ^ SatisfiedPeakTorque(?ma) ^ SatisfiedDimensionLengthMax(?ma) ^ SatisfiedOuterDiameterMax(?ma) ^ SatisfiedWeightMax(?ma) ^ hasMotor(?ma, ?m) ^ hasGearBox(?ma, ?g)
-> SatisfiedMotorGearBoxMatchForSACunit(?ma) ^ SatisfiedMotorInMotorGearBoxMatch(?m) ^ SatisfiedGearBoxInMotorGearBoxMatch(?g)




GearBoxFlexSplineScrewMatchRule:
SatisfiedGearBoxInMotorGearBoxMatch(?g) ^
hasDimensionScrewInnerDiameterFlexSplineM_d_unit_mm(?g, ?d_g_fs) ^ Screw(?s_g_fs) ^ hasDimensionScrewInnerDiameterM_d_unit_mm(?s_g_fs, ?d_s_g_fs) ^ swrlb:equal(?d_g_fs, ?d_s_g_fs)
-> hasFlexSplineScrew(?g, ?s_g_fs)

GearBoxCircularSplineScrewMatchRule:
SatisfiedGearBoxInMotorGearBoxMatch(?g) ^
hasDimensionScrewInnerDiameterCircularSplineM_d_unit_mm(?g, ?d_g_cs) ^ Screw(?s_g_cs) ^ hasDimensionScrewInnerDiameterM_d_unit_mm(?s_g_cs, ?d_s_g_cs) ^ swrlb:equal(?d_g_cs, ?d_s_g_cs)
-> hasCircularSplineScrew(?g, ?s_g_cs)

GearBoxWaveGeneratorScrewMatchRule:
SatisfiedGearBoxInMotorGearBoxMatch(?g) ^
hasDimensionScrewInnerDiameterWaveGeneratorM_d_unit_mm(?g, ?d_g_wg) ^ Screw(?s_g_wg) ^ hasDimensionScrewInnerDiameterM_d_unit_mm(?s_g_wg, ?d_s_g_wg) ^ swrlb:equal(?d_g_wg, ?d_s_g_wg)
-> hasWaveGeneratorScrew(?g, ?s_g_wg)


GearBoxMaxOverlappingEvaluate1Rule:
SatisfiedGearBoxInMotorGearBoxMatch(?g) ^
hasDimensionLengthWaveGeneratorOverlapping_unit_mm(?g, ?L_wgo_g) ^ hasDimensionSafety_c_unit_mm(?g, ?c_g) ^
swrlb:greaterThan(?L_wgo_g, ?c_g)
-> has1(?g, ?L_wgo_g)

GearBoxMaxOverlappingEvaluate2Rule:
SatisfiedGearBoxInMotorGearBoxMatch(?g) ^
hasDimensionLengthWaveGeneratorOverlapping_unit_mm(?g, ?L_wgo_g) ^ hasDimensionSafety_c_unit_mm(?g, ?c_g) ^
swrlb:lessThanOrEqual(?L_wgo_g, ?c_g)
-> has1(?g, ?c_g)


GearBoxMaxLengthWgEvaluate1Rule:
SatisfiedGearBoxInMotorGearBoxMatch(?g) ^
hasDimensionLengthWaveGeneratorOverlapping_unit_mm(?g, ?L_wgo_g) ^ hasDimensionScrewInnerDiameterWaveGeneratorM_d_unit_mm(?g, ?d_g_wg) ^
swrlb:multiply(?s_gwg15, 1.5, ?d_g_wg) ^ swrlb:greaterThan(?L_wgo_g, ?s_gwg15)
-> has2(?g, ?L_wgo_g)

GearBoxMaxLengthWgEvaluate2Rule:
SatisfiedGearBoxInMotorGearBoxMatch(?g) ^
hasDimensionLengthWaveGeneratorOverlapping_unit_mm(?g, ?L_wgo_g) ^ hasDimensionScrewInnerDiameterWaveGeneratorM_d_unit_mm(?g, ?d_g_wg) ^
swrlb:multiply(?s_gwg15, 1.5, ?d_g_wg) ^ swrlb:lessThanOrEqual(?L_wgo_g, ?s_gwg15)
-> has2(?g, ?s_gwg15)



RequirementExternCabeling1Rule:
CurrentRequirements(?r) ^ needContinuousRotationReq(?r, ?ncr) ^ hasDimensionDiameterWiringReq_D_unit_mm(?r, ?D) ^
swrlb:equal(?ncr, false) ^ swrlb:equal(?D, 0.0)
-> needExternCabeling(?r, true)

RequirementExternCabeling2Rule:
CurrentRequirements(?r) ^ needContinuousRotationReq(?r, ?ncr) ^
swrlb:equal(?ncr, true)
-> needExternCabeling(?r, false)

RequirementExternCabeling3Rule:
CurrentRequirements(?r) ^ hasDimensionDiameterWiringReq_D_unit_mm(?r, ?D) ^
swrlb:notEqual(?D, 0.0)
-> needExternCabeling(?r, false)


RequirementCoverThickness1Rule:
CurrentRequirements(?r) ^ Constants(?con) ^
needHiddenControl(?r, ?nhc) ^
swrlb:equal(?nhc, true) ^
thicknessCover(?con, ?tc_con)
-> hasThicknessCoverReq_t_unit_mm(?r, ?tc_con)

RequirementCoverThickness2Rule:
CurrentRequirements(?r) ^
needHiddenControl(?r, ?nhc) ^
swrlb:equal(?nhc, false)
-> hasThicknessCoverReq_t_unit_mm(?r, 0.0)



MotorControllerSatisfyRule:
ElmoServoDrive(?mc) ^ hasCurrentRequirement(?mc, ?r) ^
chooseMotorControllerReq(?r, ?nmc) ^
swrlb:notEqual(?nmc, "None")
-> SatisfiedMotorController(?mc)

MotorControllerNoneSatisfyRule:
NoMC(?mc) ^ hasCurrentRequirement(?mc, ?r) ^
chooseMotorControllerReq(?r, ?nmc) ^
swrlb:equal(?nmc, "None")
-> SatisfiedMotorController(?mc)



MotorControllerPositionAxialSatisfy1Rule:
MotorControllerPositionAxial(?mcp) ^ hasCurrentRequirement(?mcp, ?r) ^
chooseMotorControllerReq(?r, ?nmc) ^ swrlb:equal(?nmc, "Any")
-> SatisfiedMotorControllerPosition(?mcp)

MotorControllerPositionAxialSatisfy2Rule:
MotorControllerPositionAxial(?mcp) ^ hasCurrentRequirement(?mcp, ?r) ^
chooseMotorControllerReq(?r, ?nmc) ^ swrlb:equal(?nmc, "Axial")
-> SatisfiedMotorControllerPosition(?mcp)


MotorControllerPositionTangentialSatisfy1Rule:
MotorControllerPositionTangential(?mcp) ^ hasCurrentRequirement(?mcp, ?r) ^
chooseMotorControllerReq(?r, ?nmc) ^ swrlb:equal(?nmc, "Any")
-> SatisfiedMotorControllerPosition(?mcp)

MotorControllerPositionTangentialSatisfy2Rule:
MotorControllerPositionTangential(?mcp) ^ hasCurrentRequirement(?mcp, ?r) ^
chooseMotorControllerReq(?r, ?nmc) ^ swrlb:equal(?nmc, "Tangential")
-> SatisfiedMotorControllerPosition(?mcp)


MoterControllerPositionNoneSatisfy1Rule:
MoterControllerPositionNone(?mcp) ^ hasCurrentRequirement(?mcp, ?r) ^
chooseMotorControllerReq(?r, ?nmc) ^ swrlb:equal(?nmc, "None")
-> SatisfiedMotorControllerPosition(?mcp)




// (has1 = L_axial, has2=H_axial, has3=L_tangential, has4=H_tangential, has5=L_wiringConduit)
MotorControllerPositionMatchAxialSatisfyRule:
MotorControllerPositionMatch(?mcpm) ^ hasMotorControllerPosition(?mcpm, ?mcp) ^ MotorControllerPositionAxial(?mcp) ^ hasMotorController(?mcpm, ?mc) ^ ElmoServoDrive(?mc) ^ hasConstant(?mcpm, ?con) ^
hasDimensionLength_L_unit_mm(?mc, ?L_mc) ^ hasDimensionOuterDiameter_D_unit_mm(?mc, ?D_mc) ^ lengthMotorControllerAxialOffset(?con, ?L_offset) ^ diameterMotorControllerAxialOffset(?con, ?D_offset) ^
swrlb:add(?L_axial, ?D_mc, ?L_offset) ^ swrlb:add(?H_axial, ?L_mc, ?D_offset) ^
-> has1(?mcpm, ?L_axial) ^ has2(?mcpm, ?H_axial) ^ has3(?mcpm, 0.0) ^ has4(?mcpm, 0.0) ^ has5(?mcpm, 0.0) ^ SatisfiedMotorControllerPositionMatch(?mcpm)

MotorControllerPositionMatchTangentialSatisfyRule:
MotorControllerPositionMatch(?mcpm) ^ hasMotorControllerPosition(?mcpm, ?mcp) ^ MotorControllerPositionTangential(?mcp) ^ hasMotorController(?mcpm, ?mc) ^ ElmoServoDrive(?mc) ^ hasConstant(?mcpm, ?con) ^
hasDimensionLength_L_unit_mm(?mc, ?L_mc) ^ hasDimensionOuterDiameter_D_unit_mm(?mc, ?H_tangential) ^ lengthMotorControllerTangentialPCBOffset(?con, ?L_offset) ^ lengthWiringConduit(?con, ?L_wc_con) ^
swrlb:add(?L_tangential, ?L_mc, ?L_offset)
-> has1(?mcpm, 0.0) ^ has2(?mcpm, 0.0) ^ has3(?mcpm, ?L_tangential) ^ has4(?mcpm, ?H_tangential) ^ has5(?mcpm, ?L_wc_con) ^ SatisfiedMotorControllerPositionMatch(?mcpm)

MotorControllerPositionMatchNoneSatisfyRule:
MotorControllerPositionMatch(?mcpm) ^ hasMotorControllerPosition(?mcpm, ?mcp) ^ MoterControllerPositionNone(?mcp) ^ hasMotorController(?mcpm, ?mc) ^ NoMC(?mc)
-> has1(?mcpm, 0.0) ^ has2(?mcpm, 0.0) ^ has3(?mcpm, 0.0) ^ has4(?mcpm, 0.0) ^ has5(?mcpm, 0.0) ^ SatisfiedMotorControllerPositionMatch(?mcpm)




SlipRingNoneSetRule:
NoSlipRing(?sr) ^ hasCurrentRequirement(?sr, ?r) ^
hasDimensionDiameterWiringReq_D_unit_mm(?r, ?D)
-> hasDimensionInnerDiameter_d_unit_mm(?sr, ?D) ^ hasDimensionOuterDiameter_D_unit_mm(?sr, ?D) ^ hasDimensionMaxDiameter_D_unit_mm(?sr, ?D)

SlipRingNoneSatisfyRule:
NoSlipRing(?sr) ^ hasCurrentRequirement(?sr, ?r) ^
needContinuousRotationReq(?r, ?ncr) ^
swrlb:equal(?ncr, false)
-> SatisfiedSlipRing(?sr)


SlipRingSatisfy1Rule:
_1000MEthernet(?sr) ^ hasCurrentRequirement(?sr, ?r) ^
has100MBASET(?sr, ?m100) ^ has1000MBASET(?sr, ?m1000) ^
needOutputCommunicationReq(?r, ?noc) ^ needContinuousRotationReq(?r, ?ncr) ^
swrlb:equal(?ncr, true) ^ swrlb:equal(?noc, true) ^ swrlb:add(?nc, ?m100, ?m1000) ^ swrlb:greaterThanOrEqual(?nc, 1)
-> SatisfiedSlipRing(?sr)

SlipRingSatisfy2Rule:
_1000MEthernet(?sr) ^ hasCurrentRequirement(?sr, ?r) ^
needOutputCommunicationReq(?r, ?noc) ^ needContinuousRotationReq(?r, ?ncr) ^
swrlb:equal(?ncr, true) ^ swrlb:equal(?noc, false)
-> SatisfiedSlipRing(?sr)


SlipRingEvaluate1Rule:
SatisfiedSlipRing(?sr) ^
hasDimensionOuterDiameter_D_unit_mm(?sr, ?D_sr) ^ hasDimensionMaxDiameter_D_unit_mm(?sr, ?D_max_sr) ^
swrlb:greaterThan(?D_sr, ?D_max_sr)
-> has1(?sr, ?D_sr)

SlipRingEvaluate2Rule:
SatisfiedSlipRing(?sr) ^
hasDimensionOuterDiameter_D_unit_mm(?sr, ?D_sr) ^ hasDimensionMaxDiameter_D_unit_mm(?sr, ?D_max_sr) ^
swrlb:lessThanOrEqual(?D_sr, ?D_max_sr)
-> has1(?sr, ?D_max_sr)

SlipRingEvaluate3Rule:
SatisfiedSlipRing(?sr) ^
has1(?sr, ?D_sr) ^ hasDimensionInnerDiameter_d_unit_mm(?sr, ?d_sr) ^
swrlb:greaterThan(?D_sr, ?d_sr)
-> hasMax1_1(?sr, ?D_sr)

SlipRingEvaluate4Rule:
SatisfiedSlipRing(?sr) ^
has1(?sr, ?D_sr) ^ hasDimensionInnerDiameter_d_unit_mm(?sr, ?d_sr) ^
swrlb:lessThanOrEqual(?D_sr, ?d_sr)
-> hasMax1_1(?sr, ?d_sr)



TorqueSensorStrainGaugeBased_HollowShaftSatisfy1Rule:
StrainGaugeBased_HollowShaft(?tos) ^ hasCurrentRequirement(?tos, ?r) ^
needTorqueSensorReq(?r, ?ntssgb) ^
swrlb:equal(?ntssgb, "Any")
-> BeforeSatisfiedTorqueSensor(?tos) ^ Linear(?tos)

TorqueSensorStrainGaugeBased_HollowShaftSatisfy2Rule:
StrainGaugeBased_HollowShaft(?tos) ^ hasCurrentRequirement(?tos, ?r) ^
needTorqueSensorReq(?r, ?ntssgb) ^
swrlb:equal(?ntssgb, "Strain-Gauge-Based")
-> BeforeSatisfiedTorqueSensor(?tos) ^ Linear(?tos)


TorqueSensorStrainGaugeBased_SpokeWheelSatisfy1Rule:
StrainGaugeBased_SpokeWheel(?tos) ^ hasCurrentRequirement(?tos, ?r) ^
needTorqueSensorReq(?r, ?ntssgb) ^
swrlb:equal(?ntssgb, "Any")
-> BeforeSatisfiedTorqueSensor(?tos) ^ Compressed(?tos)

TorqueSensorStrainGaugeBased_SpokeWheelSatisfy2Rule:
StrainGaugeBased_SpokeWheel(?tos) ^ hasCurrentRequirement(?tos, ?r) ^
needTorqueSensorReq(?r, ?ntssgb) ^
swrlb:equal(?ntssgb, "Strain-Gauge-Based")
-> BeforeSatisfiedTorqueSensor(?tos) ^ Compressed(?tos)


TorqueSensorPositionEncoderBasedSatisfy1Rule:
PositionEncoderBased(?tos) ^ hasCurrentRequirement(?tos, ?r) ^
needTorqueSensorReq(?r, ?ntssgb) ^
swrlb:equal(?ntssgb, "Any")
-> BeforeSatisfiedTorqueSensor(?tos)

TorqueSensorPositionEncoderBasedSatisfy2Rule:
PositionEncoderBased(?tos) ^ hasCurrentRequirement(?tos, ?r) ^
needTorqueSensorReq(?r, ?ntssgb) ^
swrlb:equal(?ntssgb, "Position-Encoder-Based")
-> BeforeSatisfiedTorqueSensor(?tos)


TorqueSensorNoneSatisfyRule:
NoTorqueSensor(?tos) ^ hasCurrentRequirement(?tos, ?r) ^
needTorqueSensorReq(?r, ?ntssgb) ^
swrlb:equal(?ntssgb, "None")
-> BeforeSatisfiedTorqueSensor(?tos)



TorqueSensorStrainGaugeBased_HollowShaftAfterSatisfy1Rule:
BeforeSatisfiedTorqueSensor(?tos) ^ StrainGaugeBased_HollowShaft(?tos) ^ hasCurrentRequirement(?tos, ?r) ^
chooseOutputStructure(?r, ?cos) ^
swrlb:equal(?cos, "Any")
-> SatisfiedTorqueSensor(?tos)

TorqueSensorStrainGaugeBased_HollowShaftAfterSatisfy2Rule:
BeforeSatisfiedTorqueSensor(?tos) ^ StrainGaugeBased_HollowShaft(?tos) ^ hasCurrentRequirement(?tos, ?r) ^
chooseOutputStructure(?r, ?cos) ^
swrlb:equal(?cos, "Linear")
-> SatisfiedTorqueSensor(?tos)


TorqueSensorStrainGaugeBased_SpokeWheelAfterSatisfy1Rule:
BeforeSatisfiedTorqueSensor(?tos) ^ StrainGaugeBased_SpokeWheel(?tos) ^ hasCurrentRequirement(?tos, ?r) ^
chooseOutputStructure(?r, ?cos) ^
swrlb:equal(?cos, "Any")
-> SatisfiedTorqueSensor(?tos)

TorqueSensorStrainGaugeBased_SpokeWheelAfterSatisfy2Rule:
BeforeSatisfiedTorqueSensor(?tos) ^ StrainGaugeBased_SpokeWheel(?tos) ^ hasCurrentRequirement(?tos, ?r) ^
chooseOutputStructure(?r, ?cos) ^
swrlb:equal(?cos, "Compressed")
-> SatisfiedTorqueSensor(?tos)

TorqueSensorStrainGaugeBased_SpokeWheelAfterSatisfy3Rule:
BeforeSatisfiedTorqueSensor(?tos) ^ StrainGaugeBased_SpokeWheel(?tos) ^ hasCurrentRequirement(?tos, ?r) ^
chooseOutputStructure(?r, ?cos) ^
swrlb:equal(?cos, "TwoSide")
-> SatisfiedTorqueSensor(?tos)


TorqueSensorPositionEncoderBasedAfterSatisfy1Rule:
BeforeSatisfiedTorqueSensor(?tos) ^ PositionEncoderBased(?tos) ^ hasCurrentRequirement(?tos, ?r) ^
chooseOutputStructure(?r, ?cos) ^
swrlb:equal(?cos, "Any")
-> SatisfiedTorqueSensor(?tos) ^ Linear(?tos) ^ Compressed(?tos)

TorqueSensorPositionEncoderBasedAfterSatisfy2Rule:
BeforeSatisfiedTorqueSensor(?tos) ^ PositionEncoderBased(?tos) ^ hasCurrentRequirement(?tos, ?r) ^
chooseOutputStructure(?r, ?cos) ^
swrlb:equal(?cos, "TwoSide")
-> SatisfiedTorqueSensor(?tos) ^ Compressed(?tos)

TorqueSensorPositionEncoderBasedAfterSatisfy3Rule:
BeforeSatisfiedTorqueSensor(?tos) ^ PositionEncoderBased(?tos) ^ hasCurrentRequirement(?tos, ?r) ^
chooseOutputStructure(?r, ?cos) ^
swrlb:equal(?cos, "Linear")
-> SatisfiedTorqueSensor(?tos) ^ Linear(?tos)


TorqueSensorNoneAfterSatisfy1Rule:
BeforeSatisfiedTorqueSensor(?tos) ^ NoTorqueSensor(?tos) ^ hasCurrentRequirement(?tos, ?r) ^
chooseOutputStructure(?r, ?cos) ^
swrlb:equal(?cos, "Any")
-> SatisfiedTorqueSensor(?tos) ^ Linear(?tos) ^ Compressed(?tos)

TorqueSensorNoneAfterSatisfy2Rule:
BeforeSatisfiedTorqueSensor(?tos) ^ NoTorqueSensor(?tos) ^ hasCurrentRequirement(?tos, ?r) ^
chooseOutputStructure(?r, ?cos) ^
swrlb:equal(?cos, "Linear")
-> SatisfiedTorqueSensor(?tos) ^ Linear(?tos)

TorqueSensorNoneAfterSatisfy3Rule:
BeforeSatisfiedTorqueSensor(?tos) ^ NoTorqueSensor(?tos) ^ hasCurrentRequirement(?tos, ?r) ^
chooseOutputStructure(?r, ?cos) ^
swrlb:equal(?cos, "Compressed")
-> SatisfiedTorqueSensor(?tos) ^ Compressed(?tos)

TorqueSensorNoneAfterSatisfy4Rule:
BeforeSatisfiedTorqueSensor(?tos) ^ NoTorqueSensor(?tos) ^ hasCurrentRequirement(?tos, ?r) ^
chooseOutputStructure(?r, ?cos) ^
swrlb:equal(?cos, "TwoSide")
-> SatisfiedTorqueSensor(?tos) ^ Compressed(?tos)


TorqueSensorLengthADCSatisfy1Rule:
SatisfiedTorqueSensor(?tos) ^ hasCurrentRequirement(?tos, ?r) ^
needADCforTorqueExternal(?r, ?nafte) ^
swrlb:equal(?nafte, false) ^
hasDimensionLength_L_unit_mm(?tos, ?L_ADC)
-> has1(?tos, ?L_ADC)

TorqueSensorLengthADCSatisfy2Rule:
SatisfiedTorqueSensor(?tos) ^ hasCurrentRequirement(?tos, ?r) ^
needADCforTorqueExternal(?r, ?nafte) ^
swrlb:equal(?nafte, true)
-> has1(?tos, 0.0)



SlipRingTorqueSensorMatchSatisfy1Rule:
SlipRingTorqueSensorMatch(?srtsm) ^ hasSlipRing(?srtsm, ?sr) ^ _1000MEthernet(?sr) ^ hasTorqueSensor(?srtsm, ?tos) ^ hasCurrentRequirement(?srtsm, ?r) ^
hasSignal_2A(?sr, ?s2a) ^ has10A(?sr, ?s10a) ^ has20A(?sr, ?s20a) ^ hasSignal_2A(?tos, ?s2a_tos) ^
hasCurrentOutputReqMax_I_unit_A(?r, ?co) ^ hasNumberOfOutputEmergencyStopReq(?r, ?nooes) ^ hasNumberOfOtherCablesReq(?r, ?nooc) ^
swrlb:subtract(?restSignal1, ?s2a, ?nooc) ^ swrlb:subtract(?restSignal2, ?restSignal1, ?nooes) ^ swrlb:subtract(?restSignal3, ?restSignal2, ?s2a_tos) ^ swrlb:multiply(?restSignalInA, ?restSignal3, 2.0) ^ swrlb:multiply(?s10aInA, ?s10a, 10.0) ^ swrlb:multiply(?s20aInA, ?s20a, 20.0) ^ swrlb:add(?sumInA1, ?restSignalInA, ?s10aInA) ^ swrlb:add(?sumInA2, ?sumInA1, ?s20aInA) ^ swrlb:divide(?sumHalf, ?sumInA2, 2.0) ^ swrlb:greaterThanOrEqual(?sumHalf, ?co)
-> HalfSatisfiedSlipRingTorqueSensorMatch(?srtsm)


SlipRingTorqueSensorMatchSatisfy2Rule:
SlipRingTorqueSensorMatch(?srtsm) ^ hasSlipRing(?srtsm, ?sr) ^ NoSlipRing(?sr)
-> SatisfiedSlipRingTorqueSensorMatch(?srtsm)


SlipRingTorqueSensorMatchUnsatisfied1Rule:
HalfSatisfiedSlipRingTorqueSensorMatch(?srtsm1) ^ hasSlipRing(?srtsm1, ?sr1) ^ HalfSatisfiedSlipRingTorqueSensorMatch(?srtsm2) ^ hasSlipRing(?srtsm2, ?sr2) ^
hasTorqueSensor(?srtsm1, ?tos) ^ hasTorqueSensor(?srtsm2, ?tos) ^
hasDimensionLength_L_unit_mm(?sr1, ?L_sr1) ^ hasMax1_1(?sr1, ?D_sr1) ^ hasDimensionLength_L_unit_mm(?sr2, ?L_sr2) ^ hasMax1_1(?sr2, ?D_sr2) ^
swrlb:greaterThan(?L_sr1, ?L_sr2) ^ swrlb:lessThan(?L_sr2, ?L_sr1) ^ swrlb:greaterThan(?D_sr1, ?D_sr2) ^ swrlb:lessThan(?D_sr2, ?D_sr1)
-> UnsatisfiedSlipRingTorqueSensorMatch(?srtsm1)

SlipRingTorqueSensorMatchUnsatisfied2Rule:
HalfSatisfiedSlipRingTorqueSensorMatch(?srtsm1) ^ hasSlipRing(?srtsm1, ?sr1) ^ HalfSatisfiedSlipRingTorqueSensorMatch(?srtsm2) ^ hasSlipRing(?srtsm2, ?sr2) ^
hasTorqueSensor(?srtsm1, ?tos) ^ hasTorqueSensor(?srtsm2, ?tos) ^
hasDimensionLength_L_unit_mm(?sr1, ?L_sr1) ^ hasMax1_1(?sr1, ?D_sr1) ^ hasDimensionLength_L_unit_mm(?sr2, ?L_sr2) ^ hasMax1_1(?sr2, ?D_sr2) ^
swrlb:greaterThan(?L_sr1, ?L_sr2) ^ swrlb:lessThan(?L_sr2, ?L_sr1) ^ swrlb:equal(?D_sr2, ?D_sr1)
-> UnsatisfiedSlipRingTorqueSensorMatch(?srtsm1)

SlipRingTorqueSensorMatchUnsatisfied3Rule:
HalfSatisfiedSlipRingTorqueSensorMatch(?srtsm1) ^ hasSlipRing(?srtsm1, ?sr1) ^ HalfSatisfiedSlipRingTorqueSensorMatch(?srtsm2) ^ hasSlipRing(?srtsm2, ?sr2) ^
hasTorqueSensor(?srtsm1, ?tos) ^ hasTorqueSensor(?srtsm2, ?tos) ^
hasDimensionLength_L_unit_mm(?sr1, ?L_sr1) ^ hasMax1_1(?sr1, ?D_sr1) ^ hasDimensionLength_L_unit_mm(?sr2, ?L_sr2) ^ hasMax1_1(?sr2, ?D_sr2) ^
swrlb:equal(?L_sr2, ?L_sr1) ^ swrlb:greaterThan(?D_sr1, ?D_sr2) ^ swrlb:lessThan(?D_sr2, ?D_sr1)
-> UnsatisfiedSlipRingTorqueSensorMatch(?srtsm1)


SlipRingTorqueSensorMatchPossibleSatisfiedRule:
HalfSatisfiedSlipRingTorqueSensorMatch(?srtsm1) ^ hasSlipRing(?srtsm1, ?sr1) ^ HalfSatisfiedSlipRingTorqueSensorMatch(?srtsm2) ^ hasSlipRing(?srtsm2, ?sr2) ^
hasTorqueSensor(?srtsm1, ?tos) ^ hasTorqueSensor(?srtsm2, ?tos) ^
hasDimensionLength_L_unit_mm(?sr1, ?L_sr1) ^ hasMax1_1(?sr1, ?D_sr1) ^ hasDimensionLength_L_unit_mm(?sr2, ?L_sr2) ^ hasMax1_1(?sr2, ?D_sr2) ^
swrlb:equal(?L_sr2, ?L_sr1) ^ swrlb:equal(?D_sr2, ?D_sr1)
-> PossibleSatisfiedSlipRingTorqueSensorMatch(?srtsm1) ^ PossibleSatisfiedSlipRingTorqueSensorMatch(?srtsm2)



DiameterInputDriveBearingMatchLinearSatisfyRule:
DiameterInputDriveBearingMatchLinear(?didbm) ^ hasDiameterInput(?didbm, ?di) ^ hasDiameterElektro(?di, ?de) ^ hasMotor(?de, ?m) ^ hasDriveBearing(?didbm, ?db) ^
hasDimensionInnerDiameter_d_unit_mm(?m, ?d_m) ^ hasDimensionInnerDiameter_d_unit_mm(?db, ?d_ib) ^
swrlb:lessThanOrEqual(?d_ib, ?d_m)
-> HalfSatisfiedDiameterInputDriveBearingMatchLinear(?didbm)


DiameterInputDriveBearingMatchLinearUnsatisfiedRule:
HalfSatisfiedDiameterInputDriveBearingMatchLinear(?didbm1) ^ hasDiameterInput(?didbm1, ?di) ^ hasDriveBearing(?didbm1, ?db1) ^
HalfSatisfiedDiameterInputDriveBearingMatchLinear(?didbm2) ^ hasDiameterInput(?didbm2, ?di) ^ hasDriveBearing(?didbm2, ?db2) ^
hasDimensionInnerDiameter_d_unit_mm(?db1, ?d_ib1) ^ hasDimensionInnerDiameter_d_unit_mm(?db2, ?d_ib2) ^
swrlb:greaterThan(?d_ib1, ?d_ib2) ^ swrlb:lessThan(?d_ib2, ?d_ib1)
-> UnsatisfiedDiameterInputDriveBearingMatchLinear(?didbm2)

DiameterInputDriveBearingMatchLinearPossibleSatisfiedRule:
HalfSatisfiedDiameterInputDriveBearingMatchLinear(?didbm1) ^ hasDiameterInput(?didbm1, ?di) ^ hasDriveBearing(?didbm1, ?db1) ^
HalfSatisfiedDiameterInputDriveBearingMatchLinear(?didbm2) ^ hasDiameterInput(?didbm2, ?di) ^ hasDriveBearing(?didbm2, ?db2) ^
hasDimensionInnerDiameter_d_unit_mm(?db1, ?d_ib1) ^ hasDimensionInnerDiameter_d_unit_mm(?db2, ?d_ib2) ^
swrlb:equal(?d_ib2, ?d_ib1)
-> PossibleSatisfiedDiameterInputDriveBearingMatchLinear(?didbm1) ^ PossibleSatisfiedDiameterInputDriveBearingMatchLinear(?didbm2)



DiameterInputDriveBearingMatchCompressedBeforeSatisfyRule:
DiameterInputDriveBearingMatchCompressed(?didbm) ^ hasDiameterInput(?didbm, ?di) ^ hasDiameterElektro(?di, ?de) ^ hasMotor(?de, ?m) ^ hasDriveBearing(?didbm, ?db) ^ hasConstant(?didbm, ?con) ^ hasCurrentRequirement(?didbm, ?r) ^
hasDimensionInnerDiameter_d_unit_mm(?m, ?d_m) ^ hasDimensionOuterDiameter_D_unit_mm(?db, ?D_db) ^ thicknessMotorShaft(?con, ?tms_con) ^
swrlb:multiply(?tms_con2, 2.0, ?tms_con) ^ swrlb:subtract(?temp, ?d_m, ?tms_con2) ^
swrlb:lessThanOrEqual(?D_db, ?temp)
-> BeforeHalfSatisfiedDiameterInputDriveBearingMatchCompressed(?didbm)


DiameterInputDriveBearingMatchCompressedSatisfy1Rule:
BeforeHalfSatisfiedDiameterInputDriveBearingMatchCompressed(?didbm) ^ hasDriveBearing(?didbm, ?db) ^ hasConstant(?didbm, ?con) ^ hasCurrentRequirement(?didbm, ?r) ^
needExternCabeling(?r, ?nec) ^ swrlb:equal(?nec, true) ^
hasDimensionInnerDiameter_d_unit_mm(?db, ?d_db) ^ thicknessInnerShaft(?con, ?tis_con) ^
swrlb:greaterThanOrEqual(?d_db, ?tis_con)
-> HalfSatisfiedDiameterInputDriveBearingMatchCompressed(?didbm)


// This rule is needed due to strange behavior. If combined with rule below the runtime explodes for no reason. Only the separation of CurrentRequirements, Constants and hasSlipRing fixes the problem. I have no idea why...
DiameterInputDriveBearingMatchCompressedBeforeSatisfy2Rule:
BeforeHalfSatisfiedDiameterInputDriveBearingMatchCompressed(?didbm) ^ hasCurrentRequirement(?didbm, ?r) ^ hasConstant(?didbm, ?con) ^
needExternCabeling(?r, ?nec) ^ swrlb:equal(?nec, false) ^
thicknessInnerShaft(?con, ?tis_con) ^ thicknessCableChannel(?con, ?tcc_con) ^ thicknessRotationSafetyDistance(?con, ?trsd_con) ^ hasDimensionDiameterWiringReq_D_unit_mm(?r, ?D_w)
-> has1(?didbm, ?tis_con) ^ has2(?didbm, ?tcc_con) ^ has3(?didbm, ?trsd_con) ^ has4(?didbm, ?D_w)

DiameterInputDriveBearingMatchCompressedSatisfy2Rule:
BeforeHalfSatisfiedDiameterInputDriveBearingMatchCompressed(?didbm) ^ hasDiameterInput(?didbm, ?di) ^ hasDiameterElektro(?di, ?de) ^ hasSlipRingTorqueSensorAbsolutEncoderSensorPCBMatch(?de, ?gsrtsabspcb) ^ hasSlipRingTorqueSensorMatch(?gsrtsabspcb, ?srtsm) ^ hasSlipRing(?srtsm, ?sr) ^
has1(?didbm, ?tis_con) ^ has2(?didbm, ?tcc_con) ^ has3(?didbm, ?trsd_con) ^ has4(?didbm, ?D_w) ^
hasDimensionInnerDiameter_d_unit_mm(?sr, ?d_sr) ^
swrlb:multiply(?tis_con2, 2.0, ?tis_con) ^ swrlb:multiply(?tcc_con2, 2.0, ?tcc_con) ^ swrlb:add(?temp1, ?tis_con2, ?tcc_con2) ^ swrlb:add(?temp2, ?temp1, ?trsd_con) ^ 
swrlb:add(?d_need1, ?temp2, ?D_w) ^ swrlb:add(?d_need2, ?temp2, ?d_sr) ^
-> hasMax1_1(?didbm, ?d_need1) ^ hasMax1_2(?didbm, ?d_need2) 


DiameterInputDriveBearingMatchCompressedEvaluate1Rule:
BeforeHalfSatisfiedDiameterInputDriveBearingMatchCompressed(?didbm) ^ hasDriveBearing(?didbm, ?db) ^ hasCurrentRequirement(?didbm, ?r) ^
needContinuousRotationReq(?r, ?ncr) ^ swrlb:equal(?ncr, true) ^
hasDimensionInnerDiameter_d_unit_mm(?db, ?d_db) ^ hasMax1_2(?didbm, ?d_need2) ^
swrlb:greaterThanOrEqual(?d_db, ?d_need2)
-> HalfSatisfiedDiameterInputDriveBearingMatchCompressed(?didbm)

DiameterInputDriveBearingMatchCompressedEvaluate2Rule:
BeforeHalfSatisfiedDiameterInputDriveBearingMatchCompressed(?didbm) ^ hasDriveBearing(?didbm, ?db) ^ hasCurrentRequirement(?didbm, ?r) ^
needContinuousRotationReq(?r, ?ncr) ^ swrlb:equal(?ncr, false) ^
hasDimensionInnerDiameter_d_unit_mm(?db, ?d_db) ^ hasMax1_1(?didbm, ?d_need1) ^
swrlb:greaterThanOrEqual(?d_db, ?d_need1)
-> HalfSatisfiedDiameterInputDriveBearingMatchCompressed(?didbm)



DiameterInputDriveBearingMatchCompressedUnsatisfiedRule:
HalfSatisfiedDiameterInputDriveBearingMatchCompressed(?didbm1) ^ hasDiameterInput(?didbm1, ?di) ^ hasDriveBearing(?didbm1, ?db1) ^
HalfSatisfiedDiameterInputDriveBearingMatchCompressed(?didbm2) ^ hasDiameterInput(?didbm2, ?di) ^ hasDriveBearing(?didbm2, ?db2) ^
hasDimensionInnerDiameter_d_unit_mm(?db1, ?d_ib1) ^ hasDimensionInnerDiameter_d_unit_mm(?db2, ?d_ib2) ^
swrlb:greaterThan(?d_ib1, ?d_ib2) ^ swrlb:lessThan(?d_ib2, ?d_ib1)
-> UnsatisfiedDiameterInputDriveBearingMatchCompressed(?didbm2)

DiameterInputDriveBearingMatchCompressedPossibleSatisfiedRule:
HalfSatisfiedDiameterInputDriveBearingMatchCompressed(?didbm1) ^ hasDiameterInput(?didbm1, ?di) ^ hasDriveBearing(?didbm1, ?db1) ^
HalfSatisfiedDiameterInputDriveBearingMatchCompressed(?didbm2) ^ hasDiameterInput(?didbm2, ?di) ^ hasDriveBearing(?didbm2, ?db2) ^
hasDimensionInnerDiameter_d_unit_mm(?db1, ?d_ib1) ^ hasDimensionInnerDiameter_d_unit_mm(?db2, ?d_ib2) ^
swrlb:equal(?d_ib2, ?d_ib1)
-> PossibleSatisfiedDiameterInputDriveBearingMatchCompressed(?didbm1) ^ PossibleSatisfiedDiameterInputDriveBearingMatchCompressed(?didbm2)



IncrementalEncoderNoneSatisfy1Rule:
NoIE(?ie) ^ hasCurrentRequirement(?ie, ?r) ^
chooseMotorFeedbackReq(?r, ?cmf) ^ swrlb:equal(?cmf, "Hall Sensor")
-> SatisfiedIncrementalEncoder(?ie)

IncrementalEncoderNoneSatisfy2Rule:
NoIE(?ie) ^ hasCurrentRequirement(?ie, ?r) ^
chooseMotorFeedbackReq(?r, ?cmf) ^ swrlb:equal(?cmf, "None")
-> SatisfiedIncrementalEncoder(?ie)

IncrementalEncoderNoneSatisfy3Rule:
NoIE(?ie) ^ hasCurrentRequirement(?ie, ?r) ^
chooseMotorFeedbackReq(?r, ?cmf) ^ swrlb:equal(?cmf, "Any")
-> SatisfiedIncrementalEncoder(?ie)


IncrementalEncoderWithSatisfy1Rule:
WithIE(?ie) ^ hasCurrentRequirement(?ie, ?r) ^
chooseMotorFeedbackReq(?r, ?cmf) ^ swrlb:equal(?cmf, "Position Incremental Encoder")
-> SatisfiedIncrementalEncoder(?ie)

IncrementalEncoderWithSatisfy2Rule:
WithIE(?ie) ^ hasCurrentRequirement(?ie, ?r) ^
chooseMotorFeedbackReq(?r, ?cmf) ^ swrlb:equal(?cmf, "Both")
-> SatisfiedIncrementalEncoder(?ie)

IncrementalEncoderWithSatisfy3Rule:
WithIE(?ie) ^ hasCurrentRequirement(?ie, ?r) ^
chooseMotorFeedbackReq(?r, ?cmf) ^ swrlb:equal(?cmf, "Any")
-> SatisfiedIncrementalEncoder(?ie)



HallSensorNoSatisfy1Rule:
NoHallSensor(?hs) ^ hasCurrentRequirement(?hs, ?r) ^
chooseMotorFeedbackReq(?r, ?cmf) ^ swrlb:equal(?cmf, "Position Incremental Encoder")
-> SatisfiedHallSensor(?hs)

HallSensorNoSatisfy2Rule:
NoHallSensor(?hs) ^ hasCurrentRequirement(?hs, ?r) ^
chooseMotorFeedbackReq(?r, ?cmf) ^ swrlb:equal(?cmf, "None")
-> SatisfiedHallSensor(?hs)

HallSensorNoSatisfy3Rule:
NoHallSensor(?hs) ^ hasCurrentRequirement(?hs, ?r) ^
chooseMotorFeedbackReq(?r, ?cmf) ^ swrlb:equal(?cmf, "Any")
-> SatisfiedHallSensor(?hs)


HallSensorWithSatisfy1Rule:
WithHallSensor(?hs) ^ hasCurrentRequirement(?hs, ?r) ^
chooseMotorFeedbackReq(?r, ?cmf) ^ swrlb:equal(?cmf, "Hall Sensor")
-> SatisfiedHallSensor(?hs)

HallSensorWithSatisfy2Rule:
WithHallSensor(?hs) ^ hasCurrentRequirement(?hs, ?r) ^
chooseMotorFeedbackReq(?r, ?cmf) ^ swrlb:equal(?cmf, "Both")
-> SatisfiedHallSensor(?hs)

HallSensorWithSatisfy3Rule:
WithHallSensor(?hs) ^ hasCurrentRequirement(?hs, ?r) ^
chooseMotorFeedbackReq(?r, ?cmf) ^ swrlb:equal(?cmf, "Any")
-> SatisfiedHallSensor(?hs)



IncrementalEncoderHallSensorMatchSatisfy1Rule:
IncrementalEncoderHallSensorMatch(?iehs) ^ hasIncrementalEncoder(?iehs, ?ie) ^ hasHallSensor(?iehs, ?hs) ^ hasCurrentRequirement(?iehs, ?r) ^
chooseMotorFeedbackReq(?r, ?cmf) ^ swrlb:notEqual(?cmf, "Any")
-> SatisfiedIncrementalEncoderHallSensorMatch(?iehs)

IncrementalEncoderHallSensorMatchSatisfy2Rule:
IncrementalEncoderHallSensorMatch(?iehs) ^ hasIncrementalEncoder(?iehs, ?ie) ^ hasHallSensor(?iehs, ?hs) ^ hasCurrentRequirement(?iehs, ?r) ^
chooseMotorFeedbackReq(?r, ?cmf) ^ swrlb:equal(?cmf, "Any") ^
NoIE(?ie) ^ WithHallSensor(?hs)
-> SatisfiedIncrementalEncoderHallSensorMatch(?iehs)

IncrementalEncoderHallSensorMatchSatisfy3Rule:
IncrementalEncoderHallSensorMatch(?iehs) ^ hasIncrementalEncoder(?iehs, ?ie) ^ hasHallSensor(?iehs, ?hs) ^ hasCurrentRequirement(?iehs, ?r) ^
chooseMotorFeedbackReq(?r, ?cmf) ^ swrlb:equal(?cmf, "Any") ^
WithIE(?ie) ^ NoHallSensor(?hs)
-> SatisfiedIncrementalEncoderHallSensorMatch(?iehs)



LengthInputBeforeEvaluate1Rule:
LengthInput(?li) ^ hasDiameterInputDriveBearingMatch(?li, ?didbm) ^ hasIncrementalEncoderHallSensorMatch(?li, ?iehs) ^ hasIncrementalEncoder(?iehs, ?ie) ^ hasDiameterInput(?didbm, ?di) ^ hasDiameterElektro(?di, ?de) ^ hasSlipRingTorqueSensorAbsolutEncoderSensorPCBMatch(?de, ?gsrtsabspcb) ^ hasAbsoluteEncoderSensorPCBMatch(?gsrtsabspcb, ?abspcb) ^ hasAbsoluteEncoder(?abspcb, ?ab) ^
hasDimensionLength_L_unit_mm(?ie, ?L_ie) ^ hasDimensionAbsolutEncoderOnAxisLength_unit_mm(?ab, ?L_ab) ^
swrlb:greaterThan(?L_ie, ?L_ab)
-> has1(?li, ?L_ie)

LengthInputBeforeEvaluate2Rule:
LengthInput(?li) ^ hasDiameterInputDriveBearingMatch(?li, ?didbm) ^ hasIncrementalEncoderHallSensorMatch(?li, ?iehs) ^ hasIncrementalEncoder(?iehs, ?ie) ^ hasDiameterInput(?didbm, ?di) ^ hasDiameterElektro(?di, ?de) ^ hasSlipRingTorqueSensorAbsolutEncoderSensorPCBMatch(?de, ?gsrtsabspcb) ^ hasAbsoluteEncoderSensorPCBMatch(?gsrtsabspcb, ?abspcb) ^ hasAbsoluteEncoder(?abspcb, ?ab) ^
hasDimensionLength_L_unit_mm(?ie, ?L_ie) ^ hasDimensionAbsolutEncoderOnAxisLength_unit_mm(?ab, ?L_ab) ^
swrlb:lessThanOrEqual(?L_ie, ?L_ab)
-> has1(?li, ?L_ab)



LengthInputLinearCalcRule:
LengthInputLinear(?li) ^ hasDiameterInputDriveBearingMatch(?li, ?didbm) ^ hasDriveBearing(?didbm, ?db) ^ hasDiameterInput(?didbm, ?di) ^ hasDiameterElektro(?di, ?de) ^ hasSlipRingTorqueSensorAbsolutEncoderSensorPCBMatch(?de, ?gsrtsabspcb) ^ hasAbsoluteEncoderSensorPCBMatch(?gsrtsabspcb, ?abspcb) ^ hasSensorPCBOutputVariants(?abspcb, ?spcbv) ^ hasGearBox(?spcbv, ?g) ^ hasMotor(?de, ?m) ^ hasMotorBrake(?m, ?mb) ^ hasIncrementalEncoderHallSensorMatch(?li, ?iehs) ^ hasHallSensor(?iehs, ?hs) ^ hasConstant(?li, ?con) ^
has1(?li, ?L_ie) ^ hasDimensionLength_L_unit_mm(?m, ?L_m) ^ hasDimensionLength_L_unit_mm(?mb, ?L_mb) ^ hasDimensionLength_L_unit_mm(?db, ?L_ib) ^ hasDimensionLength_L_unit_mm(?hs, ?L_hs) ^ lengthFloatBearingOffset(?con, ?fbo_con) ^ lengthMotorCover(?con, ?mc_con) ^ lengthMotorWiring(?con, ?mw_con) ^ has1(?g, ?overlapping_g) ^
swrlb:multiply(?L_fixedB, ?L_ib, 2.0) ^ swrlb:add(?L_temp1, ?L_m, ?L_fixedB) ^ swrlb:add(?L_temp2, ?L_temp1, ?L_mb) ^ swrlb:add(?L_temp3, ?L_temp2, ?L_hs) ^ swrlb:add(?L_2, ?L_temp3, ?overlapping_g) ^ swrlb:add(?L_floatB, ?L_ib, ?fbo_con) ^ swrlb:add(?L_max1, ?L_floatB, ?L_ie) ^ swrlb:add(?L_max2, ?mc_con, ?mw_con)
-> has2(?li, ?L_2) ^ hasMax1_1(?li, ?L_max1) ^ hasMax1_2(?li, ?L_max2) ^ Linear(?li)


LengthInputLinearEvaluate1Rule:
LengthInputLinear(?li) ^ has2(?li, ?L_2) ^ hasMax1_1(?li, ?L_max1) ^ hasMax1_2(?li, ?L_max2) ^ swrlb:greaterThan(?L_max1, ?L_max2) ^ swrlb:add(?L_ges, ?L_2, ?L_max1) -> hasDimensionLength_L_unit_mm(?li, ?L_ges)

LengthInputLinearEvaluate2Rule:
LengthInputLinear(?li) ^ has2(?li, ?L_2) ^ hasMax1_1(?li, ?L_max1) ^ hasMax1_2(?li, ?L_max2) ^ swrlb:lessThanOrEqual(?L_max1, ?L_max2) ^ swrlb:add(?L_ges, ?L_2, ?L_max2) -> hasDimensionLength_L_unit_mm(?li, ?L_ges)



LengthInputCompressedCalcRule:
LengthInputCompressed(?li) ^ hasDiameterInputDriveBearingMatch(?li, ?didbm) ^ hasDriveBearing(?didbm, ?db) ^ hasDiameterInput(?didbm, ?di) ^ hasDiameterElektro(?di, ?de) ^ hasSlipRingTorqueSensorAbsolutEncoderSensorPCBMatch(?de, ?gsrtsabspcb) ^ hasAbsoluteEncoderSensorPCBMatch(?gsrtsabspcb, ?abspcb) ^ hasSensorPCBOutputVariants(?abspcb, ?spcbv) ^ hasGearBox(?spcbv, ?g) ^ hasMotor(?de, ?m) ^ hasMotorBrake(?m, ?mb) ^ hasIncrementalEncoderHallSensorMatch(?li, ?iehs) ^ hasHallSensor(?iehs, ?hs) ^ hasConstant(?li, ?con) ^
has1(?li, ?L_ie) ^ hasDimensionLength_L_unit_mm(?m, ?L_m) ^ hasDimensionLength_L_unit_mm(?mb, ?L_mb) ^ hasDimensionLength_L_unit_mm(?db, ?L_ib) ^ lengthFloatBearingOffset(?con, ?fbo_con) ^ has1(?g, ?overlapping_g) ^ has2(?g, ?d_g_wg) ^ hasDimensionLength_L_unit_mm(?hs, ?L_hs) ^ lengthMotorCover(?con, ?mc_con) ^ lengthMotorWiring(?con, ?mw_con) ^ lengthMotorStopBracket(?con, ?msb_con) ^ lengthRotationGap(?con, ?rg_con) ^
swrlb:add(?temp1, ?mc_con, ?mw_con) ^ swrlb:add(?temp2, ?temp1, ?L_m) ^ swrlb:add(?temp25, ?temp2, ?L_mb) ^ swrlb:add(?temp26, ?temp25, ?L_hs) ^ swrlb:add(?temp3, ?temp26, ?msb_con) ^ swrlb:add(?L_max1_1, ?temp3, ?overlapping_g) ^
swrlb:add(?L_floatB, ?L_ib, ?fbo_con) ^ swrlb:multiply(?L_fixedB, ?L_ib, 2.0) ^ swrlb:add(?temp4, ?L_floatB, ?L_fixedB) ^ swrlb:add(?L_2, ?d_g_wg, ?temp4) ^
swrlb:add(?L_max2_2, ?mc_con, ?rg_con)
-> has2(?li, ?L_2) ^ hasMax1_1(?li, ?L_max1_1) ^ hasMax2_1(?li, ?L_ie) ^ hasMax2_2(?li, ?L_max2_2) ^ Compressed(?li)


LengthInputCompressedEvaluate1Rule:
LengthInputCompressed(?li) ^
hasMax2_1(?li, ?L_max2_1) ^ hasMax2_2(?li, ?L_max2_2) ^ has2(?li, ?L_2) ^
swrlb:greaterThan(?L_max2_1, ?L_max2_2) ^ swrlb:add(?L_max1_2, ?L_2, ?L_max2_1)
-> hasMax1_2(?li, ?L_max1_2)

LengthInputCompressedEvaluate2Rule:
LengthInputCompressed(?li) ^
hasMax2_1(?li, ?L_max2_1) ^ hasMax2_2(?li, ?L_max2_2) ^ has2(?li, ?L_2) ^
swrlb:lessThanOrEqual(?L_max2_1, ?L_max2_2) ^ swrlb:add(?L_max1_2, ?L_2, ?L_max2_2)
-> hasMax1_2(?li, ?L_max1_2)

LengthInputCompressedEvaluate3Rule:
LengthInputCompressed(?li) ^
hasMax1_1(?li, ?L_max1_1) ^ hasMax1_2(?li, ?L_max1_2)
swrlb:greaterThan(?L_max1_1, ?L_max1_2)
-> hasDimensionLength_L_unit_mm(?li, ?L_max1_1)

LengthInputCompressedEvaluate4Rule:
LengthInputCompressed(?li) ^
hasMax1_1(?li, ?L_max1_1) ^ hasMax1_2(?li, ?L_max1_2)
swrlb:lessThanOrEqual(?L_max1_1, ?L_max1_2)
-> hasDimensionLength_L_unit_mm(?li, ?L_max1_2)



AbsolutEncoderWithSatisfy1Rule:
AbsolutEncoderMBAD01_05(?ab) ^ hasCurrentRequirement(?ab, ?r) ^
needAbsoluteEncoderReq(?r, ?ab_r) ^ needExternCabeling(?r, ?nec) ^
swrlb:equal(?ab_r, true) ^ swrlb:equal(?nec, false)
-> SatisfiedAbsoluteEncoder(?ab)

AbsolutEncoderWithSatisfy2Rule:
AbsolutEncoderMBAD01_05(?ab) ^ hasCurrentRequirement(?ab, ?r) ^
needExternCabeling(?r, ?nec) ^ needTorqueSensorReq(?r, ?ntssgb) ^
swrlb:equal(?nec, false) ^ swrlb:equal(?ntssgb, "Any")
-> SatisfiedAbsoluteEncoder(?ab)

AbsolutEncoderWithSatisfy3Rule:
AbsolutEncoderMBAD01_05(?ab) ^ hasCurrentRequirement(?ab, ?r) ^
needExternCabeling(?r, ?nec) ^ needTorqueSensorReq(?r, ?ntssgb) ^
swrlb:equal(?nec, false) ^ swrlb:equal(?ntssgb, "Position-Encoder-Based")
-> SatisfiedAbsoluteEncoder(?ab)


AbsolutEncoderNoneSatisfyRule:
NoAbsolutEncoder(?ab) ^ hasCurrentRequirement(?ab, ?r) ^
needAbsoluteEncoderReq(?r, ?ab_r) ^ needTorqueSensorReq(?r, ?ntssgb) ^
swrlb:equal(?ab_r, false) ^ swrlb:notEqual(?ntssgb, "Position-Encoder-Based")
-> SatisfiedAbsoluteEncoder(?ab)


AbsolutEncoderOnAxisSatisfy1Rule:
AbsolutEncoderOnAxis(?ab) ^ hasCurrentRequirement(?ab, ?r) ^
needAbsoluteEncoderReq(?r, ?ab_r) ^ needExternCabeling(?r, ?nec) ^
swrlb:equal(?ab_r, true) ^ swrlb:equal(?nec, true)
-> SatisfiedAbsoluteEncoder(?ab)

AbsolutEncoderOnAxisSatisfy2Rule:
AbsolutEncoderOnAxis(?ab) ^ hasCurrentRequirement(?ab, ?r) ^
needExternCabeling(?r, ?nec) ^ needTorqueSensorReq(?r, ?ntssgb) ^
swrlb:equal(?nec, true) ^ swrlb:equal(?ntssgb, "Any")
-> SatisfiedAbsoluteEncoder(?ab)

AbsolutEncoderOnAxisSatisfy3Rule:
AbsolutEncoderOnAxis(?ab) ^ hasCurrentRequirement(?ab, ?r) ^
needExternCabeling(?r, ?nec) ^ needTorqueSensorReq(?r, ?ntssgb) ^
swrlb:equal(?nec, true) ^ swrlb:equal(?ntssgb, "Position-Encoder-Based")
-> SatisfiedAbsoluteEncoder(?ab)



TorqueSensorAbsolutEncoderMatchSatisfy1Rule:
TorqueSensorAbsolutEncoderMatch(?tsab) ^ hasTorqueSensor(?tsab, ?tos) ^ hasAbsoluteEncoder(?tsab, ?ab) ^ hasCurrentRequirement(?tsab, ?r) ^
needAbsoluteEncoderReq(?r, ?ab_r) ^ needTorqueSensorReq(?r, ?ntssgb) ^
swrlb:equal(?ab_r, false) ^ swrlb:equal(?ntssgb, "Any") ^
PositionEncoderBased(?tos) ^ AbsolutEncoderMBAD01_05(?ab)
-> SatisfiedTorqueSensorAbsolutEncoderMatch(?tsab)

TorqueSensorAbsolutEncoderMatchSatisfy2Rule:
TorqueSensorAbsolutEncoderMatch(?tsab) ^ hasTorqueSensor(?tsab, ?tos) ^ hasAbsoluteEncoder(?tsab, ?ab) ^ hasCurrentRequirement(?tsab, ?r) ^
needAbsoluteEncoderReq(?r, ?ab_r) ^ needTorqueSensorReq(?r, ?ntssgb) ^
swrlb:equal(?ab_r, false) ^ swrlb:equal(?ntssgb, "Any") ^
PositionEncoderBased(?tos) ^ AbsolutEncoderOnAxis(?ab)
-> SatisfiedTorqueSensorAbsolutEncoderMatch(?tsab)

TorqueSensorAbsolutEncoderMatchSatisfy3Rule:
TorqueSensorAbsolutEncoderMatch(?tsab) ^ hasTorqueSensor(?tsab, ?tos) ^ hasAbsoluteEncoder(?tsab, ?ab) ^ hasCurrentRequirement(?tsab, ?r) ^
needAbsoluteEncoderReq(?r, ?ab_r) ^ needTorqueSensorReq(?r, ?ntssgb) ^
swrlb:equal(?ab_r, false) ^ swrlb:equal(?ntssgb, "Any") ^
StrainGaugeBased_HollowShaft(?tos) ^ NoAbsolutEncoder(?ab)
-> SatisfiedTorqueSensorAbsolutEncoderMatch(?tsab)

TorqueSensorAbsolutEncoderMatchSatisfy4Rule:
TorqueSensorAbsolutEncoderMatch(?tsab) ^ hasTorqueSensor(?tsab, ?tos) ^ hasAbsoluteEncoder(?tsab, ?ab) ^ hasCurrentRequirement(?tsab, ?r) ^
needAbsoluteEncoderReq(?r, ?ab_r) ^ needTorqueSensorReq(?r, ?ntssgb) ^
swrlb:equal(?ab_r, false) ^ swrlb:equal(?ntssgb, "Any") ^
StrainGaugeBased_SpokeWheel(?tos) ^ NoAbsolutEncoder(?ab)
-> SatisfiedTorqueSensorAbsolutEncoderMatch(?tsab)

TorqueSensorAbsolutEncoderMatchSatisfy5Rule:
TorqueSensorAbsolutEncoderMatch(?tsab) ^ hasCurrentRequirement(?tsab, ?r) ^
needAbsoluteEncoderReq(?r, ?ab_r) ^
swrlb:equal(?ab_r, true) ^
-> SatisfiedTorqueSensorAbsolutEncoderMatch(?tsab)

TorqueSensorAbsolutEncoderMatchSatisfy6Rule:
TorqueSensorAbsolutEncoderMatch(?tsab) ^ hasCurrentRequirement(?tsab, ?r) ^
needTorqueSensorReq(?r, ?ntssgb) ^
swrlb:notEqual(?ntssgb, "Any") ^
-> SatisfiedTorqueSensorAbsolutEncoderMatch(?tsab)


TorqueSensorAbsolutEncoderMatchSet2Length1Rule:
SatisfiedTorqueSensorAbsolutEncoderMatch(?tsab) ^ hasTorqueSensor(?tsab, ?tos) ^ hasAbsoluteEncoder(?tsab, ?ab) ^
PositionEncoderBased(?tos) ^
hasDimensionLength_L_unit_mm(?ab, ?L_ab)
-> has1(?tsab, ?L_ab)

TorqueSensorAbsolutEncoderMatchSet2Length2Rule:
SatisfiedTorqueSensorAbsolutEncoderMatch(?tsab) ^ hasTorqueSensor(?tsab, ?tos) ^ hasAbsoluteEncoder(?tsab, ?ab) ^
StrainGaugeBased_HollowShaft(?tos)
-> has1(?tsab, 0.0)

TorqueSensorAbsolutEncoderMatchSet2Length3Rule:
SatisfiedTorqueSensorAbsolutEncoderMatch(?tsab) ^ hasTorqueSensor(?tsab, ?tos) ^ hasAbsoluteEncoder(?tsab, ?ab) ^
StrainGaugeBased_SpokeWheel(?tos)
-> has1(?tsab, 0.0)

TorqueSensorAbsolutEncoderMatchSet2Length4Rule:
SatisfiedTorqueSensorAbsolutEncoderMatch(?tsab) ^ hasTorqueSensor(?tsab, ?tos) ^ hasAbsoluteEncoder(?tsab, ?ab) ^
NoTorqueSensor(?tos)
-> has1(?tsab, 0.0)



TorqueSensorAbsolutEncoderMatchSetDeviceCount1Rule:
SatisfiedTorqueSensorAbsolutEncoderMatch(?tsab) ^ hasAbsoluteEncoder(?tsab, ?ab) ^
NoAbsolutEncoder(?ab)
-> hasNumberOfAbsolutEncoder(?tsab, 0.0)

TorqueSensorAbsolutEncoderMatchSetDeviceCount2Rule:
SatisfiedTorqueSensorAbsolutEncoderMatch(?tsab) ^ hasTorqueSensor(?tsab, ?tos) ^
PositionEncoderBased(?tos)
-> hasNumberOfAbsolutEncoder(?tsab, 2.0)

TorqueSensorAbsolutEncoderMatchSetDeviceCount3Rule:
SatisfiedTorqueSensorAbsolutEncoderMatch(?tsab) ^ hasTorqueSensor(?tsab, ?tos) ^ hasCurrentRequirement(?tsab, ?r) ^
needAbsoluteEncoderReq(?r, ?ab_r) ^
swrlb:equal(?ab_r, true) ^
StrainGaugeBased_HollowShaft(?tos)
-> hasNumberOfAbsolutEncoder(?tsab, 1.0)

TorqueSensorAbsolutEncoderMatchSetDeviceCount4Rule:
SatisfiedTorqueSensorAbsolutEncoderMatch(?tsab) ^ hasTorqueSensor(?tsab, ?tos) ^ hasCurrentRequirement(?tsab, ?r) ^
needAbsoluteEncoderReq(?r, ?ab_r) ^
swrlb:equal(?ab_r, true) ^
StrainGaugeBased_SpokeWheel(?tos)
-> hasNumberOfAbsolutEncoder(?tsab, 1.0)

TorqueSensorAbsolutEncoderMatchSetDeviceCount5Rule:
SatisfiedTorqueSensorAbsolutEncoderMatch(?tsab) ^ hasTorqueSensor(?tsab, ?tos) ^ hasCurrentRequirement(?tsab, ?r) ^
needAbsoluteEncoderReq(?r, ?ab_r) ^
swrlb:equal(?ab_r, true) ^
NoTorqueSensor(?tos)
-> hasNumberOfAbsolutEncoder(?tsab, 1.0)



SensorPCBWithSatisfyRule:
WithSensorPCB(?spcb) ^ hasCurrentRequirement(?spcb, ?r) ^ needSensorControlBoardReq(?r, ?spcm) ^ swrlb:equal(?spcm, true) -> SatisfiedSensorPCB(?spcb)

SensorPCBNoneSatisfyRule:
NoSensorPCB(?spcb) ^ hasCurrentRequirement(?spcb, ?r) ^ needSensorControlBoardReq(?r, ?spcm) ^ swrlb:equal(?spcm, false) -> SatisfiedSensorPCB(?spcb)


SensorPCBOutputVariantsLinearWithCalc1Rule:
SensorPCBOutputVariantsLinear(?spcbv) ^ hasSensorPCB(?spcbv, ?spcb) ^ hasGearBox(?spcbv, ?g) ^
WithSensorPCB(?spcb) ^
hasDimensionOuterDiameter_D_unit_mm(?spcb, ?D_spcb) ^ hasDimensionDiameterPitchCircleFlexSpline_T_unit_mm(?g, ?T_g) ^ hasDimensionScrewInnerDiameterFlexSplineM_d_unit_mm(?g, ?d_g_fs) ^
swrlb:subtract(?D_temp, ?T_g, ?d_g_fs) ^ swrlb:divide(?D_half, ?D_spcb, 2.0) ^ swrlb:add(?D_max2, ?D_temp, ?D_half) ^
swrlb:greaterThan(?D_spcb, ?D_max2)
-> hasDimensionOuterDiameter_D_unit_mm(?spcbv, ?D_spcb) ^ SatisfiedSensorPCBOutputVariantsLinear(?spcbv)

SensorPCBOutputVariantsLinearWithCalc2Rule:
SensorPCBOutputVariantsLinear(?spcbv) ^ hasSensorPCB(?spcbv, ?spcb) ^ hasGearBox(?spcbv, ?g) ^
WithSensorPCB(?spcb) ^
hasDimensionOuterDiameter_D_unit_mm(?spcb, ?D_spcb) ^ hasDimensionDiameterPitchCircleFlexSpline_T_unit_mm(?g, ?T_g) ^ hasDimensionScrewInnerDiameterFlexSplineM_d_unit_mm(?g, ?d_g_fs) ^
swrlb:subtract(?D_temp, ?T_g, ?d_g_fs) ^ swrlb:divide(?D_half, ?D_spcb, 2.0) ^ swrlb:add(?D_max2, ?D_temp, ?D_half) ^
swrlb:lessThanOrEqual(?D_spcb, ?D_max2)
-> hasDimensionOuterDiameter_D_unit_mm(?spcbv, ?D_max2) ^ SatisfiedSensorPCBOutputVariantsLinear(?spcbv)

SensorPCBOutputVariantsLinearNoCalcRule:
SensorPCBOutputVariantsLinear(?spcbv) ^ hasSensorPCB(?spcbv, ?spcb) ^
NoSensorPCB(?spcb) ^
hasDimensionOuterDiameter_D_unit_mm(?spcb, ?D_spcb)
-> hasDimensionOuterDiameter_D_unit_mm(?spcbv, ?D_spcb) ^ SatisfiedSensorPCBOutputVariantsLinear(?spcbv)


SensorPCBOutputVariantsCompressedCalcRule:
SensorPCBOutputVariantsCompressed(?spcbv) ^ hasSensorPCB(?spcbv, ?spcb) ^
hasDimensionOuterDiameter_D_unit_mm(?spcb, ?D_spcb)
-> hasDimensionOuterDiameter_D_unit_mm(?spcbv, ?D_spcb) ^ SatisfiedSensorPCBOutputVariantsCompressed(?spcbv)



AbsolutEncoderSensorPCBMatchSatisfy1Rule:
AbsoluteEncoderSensorPCBMatch(?abspcb) ^ hasAbsoluteEncoder(?abspcb, ?ab) ^ hasSensorPCBOutputVariants(?abspcb, ?spcbv) ^ hasSensorPCB(?spcbv, ?spcb) ^ hasConstant(?abspcb, ?con) ^
hasDimensionLength_L_unit_mm(?ab, ?L_ab) ^ hasDimensionLength_L_unit_mm(?spcb, ?L_spcb) ^ lengthAbsoluteEncoderWithSensorPCB(?con, ?L_aewspcb) ^
swrlb:add(?L_temp, ?L_ab, ?L_spcb) ^
swrlb:greaterThan(?L_temp, ?L_aewspcb)
-> hasDimensionLength_L_unit_mm(?abspcb, ?L_aewspcb)

AbsolutEncoderSensorPCBMatchSatisfy2Rule:
AbsoluteEncoderSensorPCBMatch(?abspcb) ^ hasAbsoluteEncoder(?abspcb, ?ab) ^ hasSensorPCBOutputVariants(?abspcb, ?spcbv) ^ hasSensorPCB(?spcbv, ?spcb) ^ hasConstant(?abspcb, ?con) ^
hasDimensionLength_L_unit_mm(?ab, ?L_ab) ^ hasDimensionLength_L_unit_mm(?spcb, ?L_spcb) ^ lengthAbsoluteEncoderWithSensorPCB(?con, ?L_aewspcb) ^
swrlb:add(?L_temp, ?L_ab, ?L_spcb) ^
swrlb:lessThanOrEqual(?L_temp, ?L_aewspcb)
-> hasDimensionLength_L_unit_mm(?abspcb, ?L_temp)





SlipRingTorqueSensorAbsolutEncoderSensorPCBMatchOutputLinearCalc1Rule:
SlipRingTorqueSensorAbsolutEncoderSensorPCBMatchOutputLinear(?gsrtsabspcb) ^ hasSlipRingTorqueSensorMatch(?gsrtsabspcb, ?srtsm) ^ hasSlipRing(?srtsm, ?sr) ^ hasAbsoluteEncoderSensorPCBMatch(?gsrtsabspcb, ?abspcb) ^ hasAbsoluteEncoder(?abspcb, ?ab) ^ AbsolutEncoderMBAD01_05(?ab) ^
hasTorqueSensor(?srtsm, ?tos) ^ Linear(?tos) ^
hasTorqueSensorAbsolutEncoderMatch(?gsrtsabspcb, ?tsab) ^ hasTorqueSensor(?tsab, ?tos) ^ hasAbsoluteEncoder(?tsab, ?ab) ^
hasSensorPCBOutputVariants(?abspcb, ?spcbv) ^ SatisfiedSensorPCBOutputVariantsLinear(?spcbv) ^ hasGearBox(?spcbv, ?g) ^
hasDimensionDiameterPitchCircleFlexSpline_T_unit_mm(?g, ?T_g) ^ hasDimensionScrewInnerDiameterFlexSplineM_d_unit_mm(?g, ?d_g_fs) ^
swrlb:subtract(?d_temp, ?T_g, ?d_g_fs) ^
hasDimensionInnerDiameterFlexSpline_K_unit_mm(?g, ?d_g) ^ hasDimensionOuterDiameter_D_unit_mm(?sr, ?D_sr) ^
swrlb:greaterThanOrEqual(?d_g, ?D_sr)
-> HalfSatisfiedSlipRingTorqueSensorAbsolutEncoderSensorPCBMatchOutputLinear(?gsrtsabspcb) ^ has1(?gsrtsabspcb, ?d_temp)

SlipRingTorqueSensorAbsolutEncoderSensorPCBMatchOutputLinearCalc2Rule:
SlipRingTorqueSensorAbsolutEncoderSensorPCBMatchOutputLinear(?gsrtsabspcb) ^ hasSlipRingTorqueSensorMatch(?gsrtsabspcb, ?srtsm) ^ hasSlipRing(?srtsm, ?sr) ^ hasAbsoluteEncoderSensorPCBMatch(?gsrtsabspcb, ?abspcb) ^ hasAbsoluteEncoder(?abspcb, ?ab) ^ NoAbsolutEncoder(?ab) ^
hasTorqueSensor(?srtsm, ?tos) ^ Linear(?tos) ^
hasTorqueSensorAbsolutEncoderMatch(?gsrtsabspcb, ?tsab) ^ hasTorqueSensor(?tsab, ?tos) ^ hasAbsoluteEncoder(?tsab, ?ab) ^
hasSensorPCBOutputVariants(?abspcb, ?spcbv) ^ SatisfiedSensorPCBOutputVariantsLinear(?spcbv) ^ hasGearBox(?spcbv, ?g) ^
hasDimensionInnerDiameterFlexSpline_K_unit_mm(?g, ?d_g) ^ hasDimensionOuterDiameter_D_unit_mm(?sr, ?D_sr) ^
swrlb:greaterThanOrEqual(?d_g, ?D_sr)
-> SatisfiedSlipRingTorqueSensorAbsolutEncoderSensorPCBMatchOutputLinear(?gsrtsabspcb)

SlipRingTorqueSensorAbsolutEncoderSensorPCBMatchOutputLinearCalc3Rule:
SlipRingTorqueSensorAbsolutEncoderSensorPCBMatchOutputLinear(?gsrtsabspcb) ^ hasSlipRingTorqueSensorMatch(?gsrtsabspcb, ?srtsm) ^ hasSlipRing(?srtsm, ?sr) ^ hasAbsoluteEncoderSensorPCBMatch(?gsrtsabspcb, ?abspcb) ^ hasAbsoluteEncoder(?abspcb, ?ab) ^ AbsolutEncoderOnAxis(?ab) ^
hasTorqueSensor(?srtsm, ?tos) ^ Linear(?tos) ^
hasTorqueSensorAbsolutEncoderMatch(?gsrtsabspcb, ?tsab) ^ hasTorqueSensor(?tsab, ?tos) ^ hasAbsoluteEncoder(?tsab, ?ab) ^
hasSensorPCBOutputVariants(?abspcb, ?spcbv) ^ SatisfiedSensorPCBOutputVariantsLinear(?spcbv) ^ hasGearBox(?spcbv, ?g) ^
hasDimensionInnerDiameterFlexSpline_K_unit_mm(?g, ?d_g) ^ hasDimensionOuterDiameter_D_unit_mm(?sr, ?D_sr) ^
swrlb:greaterThanOrEqual(?d_g, ?D_sr)
-> SatisfiedSlipRingTorqueSensorAbsolutEncoderSensorPCBMatchOutputLinear(?gsrtsabspcb)



SlipRingTorqueSensorAbsolutEncoderSensorPCBMatchOutputLinearPossibleUnsatisfied1Rule:
HalfSatisfiedSlipRingTorqueSensorAbsolutEncoderSensorPCBMatchOutputLinear(?gsrtsabspcb) ^ hasAbsoluteEncoderSensorPCBMatch(?gsrtsabspcb, ?abspcb) ^ hasAbsoluteEncoder(?abspcb, ?ab) ^
has1(?gsrtsabspcb, ?d_need) ^ hasDimensionInnerDiameter_d_unit_mm(?ab, ?d_ab) ^
swrlb:lessThan(?d_ab, ?d_need)
-> BackupSatisfiedSlipRingTorqueSensorAbsolutEncoderSensorPCBMatchOutputLinear(?gsrtsabspcb)

SlipRingTorqueSensorAbsolutEncoderSensorPCBMatchOutputLinearPossibleUnsatisfied2Rule:
HalfSatisfiedSlipRingTorqueSensorAbsolutEncoderSensorPCBMatchOutputLinear(?gsrtsabspcb) ^ hasAbsoluteEncoderSensorPCBMatch(?gsrtsabspcb, ?abspcb) ^ hasAbsoluteEncoder(?abspcb, ?ab) ^
has1(?gsrtsabspcb, ?d_need) ^ hasDimensionInnerDiameter_d_unit_mm(?ab, ?d_ab) ^
swrlb:greaterThanOrEqual(?d_ab, ?d_need) ^
-> HalfPossibleUnsatisfiedSatisfiedSlipRingTorqueSensorAbsolutEncoderSensorPCBMatchOutputLinear(?gsrtsabspcb)



SlipRingTorqueSensorAbsolutEncoderSensorPCBMatchOutputLinearUnsatisfiedRule:
HalfPossibleUnsatisfiedSatisfiedSlipRingTorqueSensorAbsolutEncoderSensorPCBMatchOutputLinear(?gsrtsabspcb1) ^ hasSlipRingTorqueSensorMatch(?gsrtsabspcb1, ?srtsm) ^ hasAbsoluteEncoderSensorPCBMatch(?gsrtsabspcb1, ?abspcb1) ^ hasAbsoluteEncoder(?abspcb1, ?ab1) ^ hasSensorPCBOutputVariants(?abspcb1, ?spcbv) ^
HalfPossibleUnsatisfiedSatisfiedSlipRingTorqueSensorAbsolutEncoderSensorPCBMatchOutputLinear(?gsrtsabspcb2) ^ hasSlipRingTorqueSensorMatch(?gsrtsabspcb2, ?srtsm) ^ hasAbsoluteEncoderSensorPCBMatch(?gsrtsabspcb2, ?abspcb2) ^ hasAbsoluteEncoder(?abspcb2, ?ab2) ^ hasSensorPCBOutputVariants(?abspcb2, ?spcbv) ^
hasDimensionOuterDiameter_D_unit_mm(?ab1, ?D_ab1) ^ hasDimensionOuterDiameter_D_unit_mm(?ab2, ?D_ab2) ^
swrlb:greaterThan(?D_ab1, ?D_ab2) ^ swrlb:lessThan(?D_ab2, ?D_ab1)
-> UnsatisfiedSlipRingTorqueSensorAbsolutEncoderSensorPCBMatchOutputLinear(?gsrtsabspcb1)

SlipRingTorqueSensorAbsolutEncoderSensorPCBMatchOutputLinearPossibleSatisfiedRule:
HalfPossibleUnsatisfiedSatisfiedSlipRingTorqueSensorAbsolutEncoderSensorPCBMatchOutputLinear(?gsrtsabspcb1) ^ hasSlipRingTorqueSensorMatch(?gsrtsabspcb1, ?srtsm) ^ hasAbsoluteEncoderSensorPCBMatch(?gsrtsabspcb1, ?abspcb1) ^ hasAbsoluteEncoder(?abspcb1, ?ab1) ^ hasSensorPCBOutputVariants(?abspcb1, ?spcbv) ^
HalfPossibleUnsatisfiedSatisfiedSlipRingTorqueSensorAbsolutEncoderSensorPCBMatchOutputLinear(?gsrtsabspcb2)  ^ hasSlipRingTorqueSensorMatch(?gsrtsabspcb2, ?srtsm) ^ hasAbsoluteEncoderSensorPCBMatch(?gsrtsabspcb2, ?abspcb2) ^ hasAbsoluteEncoder(?abspcb2, ?ab2) ^ hasSensorPCBOutputVariants(?abspcb2, ?spcbv) ^
hasDimensionOuterDiameter_D_unit_mm(?ab1, ?D_ab1) ^ hasDimensionOuterDiameter_D_unit_mm(?ab2, ?D_ab2) ^
swrlb:equal(?D_ab2, ?D_ab1)
-> PossibleSatisfiedSlipRingTorqueSensorAbsolutEncoderSensorPCBMatchOutputLinear(?gsrtsabspcb1) ^ PossibleSatisfiedSlipRingTorqueSensorAbsolutEncoderSensorPCBMatchOutputLinear(?gsrtsabspcb2)


SlipRingTorqueSensorAbsolutEncoderSensorPCBMatchOutputLinearBackupSatisfiedRule:
BackupSatisfiedSlipRingTorqueSensorAbsolutEncoderSensorPCBMatchOutputLinear(?gsrtsabspcb1) ^ hasSlipRingTorqueSensorMatch(?gsrtsabspcb1, ?srtsm) ^ hasAbsoluteEncoderSensorPCBMatch(?gsrtsabspcb1, ?abspcb1) ^ hasAbsoluteEncoder(?abspcb1, ?ab1) ^ hasSensorPCBOutputVariants(?abspcb1, ?spcbv) ^
BackupSatisfiedSlipRingTorqueSensorAbsolutEncoderSensorPCBMatchOutputLinear(?gsrtsabspcb2) ^ hasSlipRingTorqueSensorMatch(?gsrtsabspcb2, ?srtsm) ^ hasAbsoluteEncoderSensorPCBMatch(?gsrtsabspcb2, ?abspcb2) ^ hasAbsoluteEncoder(?abspcb2, ?ab2) ^ hasSensorPCBOutputVariants(?abspcb2, ?spcbv) ^
hasDimensionInnerDiameter_d_unit_mm(?ab1, ?d_ab1) ^ hasDimensionInnerDiameter_d_unit_mm(?ab2, ?d_ab2) ^
swrlb:greaterThan(?d_ab2, ?d_ab1) ^ swrlb:lessThan(?d_ab1, ?d_ab2)
-> BackupUnsatisfiedSlipRingTorqueSensorAbsolutEncoderSensorPCBMatchOutputLinear(?gsrtsabspcb1)

SlipRingTorqueSensorAbsolutEncoderSensorPCBMatchOutputLinearBackupPossibleSatisfiedRule:
BackupSatisfiedSlipRingTorqueSensorAbsolutEncoderSensorPCBMatchOutputLinear(?gsrtsabspcb1) ^ hasSlipRingTorqueSensorMatch(?gsrtsabspcb1, ?srtsm) ^ hasAbsoluteEncoderSensorPCBMatch(?gsrtsabspcb1, ?abspcb1) ^ hasAbsoluteEncoder(?abspcb1, ?ab1) ^ hasSensorPCBOutputVariants(?abspcb1, ?spcbv) ^
BackupSatisfiedSlipRingTorqueSensorAbsolutEncoderSensorPCBMatchOutputLinear(?gsrtsabspcb2) ^ hasSlipRingTorqueSensorMatch(?gsrtsabspcb2, ?srtsm) ^ hasAbsoluteEncoderSensorPCBMatch(?gsrtsabspcb2, ?abspcb2) ^ hasAbsoluteEncoder(?abspcb2, ?ab2) ^ hasSensorPCBOutputVariants(?abspcb2, ?spcbv) ^
hasDimensionInnerDiameter_d_unit_mm(?ab1, ?d_ab1) ^ hasDimensionInnerDiameter_d_unit_mm(?ab2, ?d_ab2) ^
swrlb:equal(?d_ab2, ?d_ab1)
-> BackupPossibleSatisfiedSlipRingTorqueSensorAbsolutEncoderSensorPCBMatchOutputLinear(?gsrtsabspcb1) ^ BackupPossibleSatisfiedSlipRingTorqueSensorAbsolutEncoderSensorPCBMatchOutputLinear(?gsrtsabspcb2)





SlipRingTorqueSensorAbsolutEncoderSensorPCBMatchOutputCompressedCalc1Rule:
SlipRingTorqueSensorAbsolutEncoderSensorPCBMatchOutputCompressed(?gsrtsabspcb) ^ hasSlipRingTorqueSensorMatch(?gsrtsabspcb, ?srtsm) ^ hasSlipRing(?srtsm, ?sr) ^ hasAbsoluteEncoderSensorPCBMatch(?gsrtsabspcb, ?abspcb) ^ hasAbsoluteEncoder(?abspcb, ?ab) ^ hasConstant(?gsrtsabspcb, ?con) ^ hasCurrentRequirement(?gsrtsabspcb, ?r) ^ AbsolutEncoderMBAD01_05(?ab) ^
hasTorqueSensor(?srtsm, ?tos) ^ Compressed(?tos) ^
hasTorqueSensorAbsolutEncoderMatch(?gsrtsabspcb, ?tsab) ^ hasTorqueSensor(?tsab, ?tos) ^ hasAbsoluteEncoder(?tsab, ?ab) ^
hasSensorPCBOutputVariants(?abspcb, ?spcbv) ^ SatisfiedSensorPCBOutputVariantsCompressed(?spcbv) ^ hasGearBox(?spcbv, ?g) ^
thicknessRotationSafetyDistance(?con, ?trsd_con) ^ thicknessCableChannel(?con, ?tcc_con) ^ hasDimensionInnerDiameter_d_unit_mm(?sr, ?d_sr) ^ hasDimensionDiameterWiringReq_D_unit_mm(?r, ?D_w) ^
swrlb:multiply(?tcc_con2, 2.0, ?tcc_con) ^ swrlb:add(?temp1, ?trsd_con, ?tcc_con2) ^
swrlb:add(?d_need1, ?temp1, ?D_w) ^ swrlb:add(?d_need2, ?temp1, ?d_sr) ^
hasDimensionInnerDiameterFlexSpline_K_unit_mm(?g, ?d_g) ^ hasDimensionOuterDiameter_D_unit_mm(?sr, ?D_sr) ^
swrlb:greaterThanOrEqual(?d_g, ?D_sr)
->  hasMax1_1(?gsrtsabspcb, ?d_need1) ^ hasMax1_2(?gsrtsabspcb, ?d_need2)


SlipRingTorqueSensorAbsolutEncoderSensorPCBMatchOutputCompressedEvaluate1Rule:
SlipRingTorqueSensorAbsolutEncoderSensorPCBMatchOutputCompressed(?gsrtsabspcb) ^ hasAbsoluteEncoderSensorPCBMatch(?gsrtsabspcb, ?abspcb) ^ hasAbsoluteEncoder(?abspcb, ?ab) ^ hasCurrentRequirement(?didbm, ?r) ^
needContinuousRotationReq(?r, ?ncr) ^ swrlb:equal(?ncr, true) ^
hasDimensionInnerDiameter_d_unit_mm(?ab, ?d_ab) ^ hasMax1_2(?gsrtsabspcb, ?d_need2) ^
swrlb:greaterThanOrEqual(?d_ab, ?d_need2)
-> HalfSatisfiedSlipRingTorqueSensorAbsolutEncoderSensorPCBMatchOutputCompressed(?gsrtsabspcb)

SlipRingTorqueSensorAbsolutEncoderSensorPCBMatchOutputCompressedEvaluate2Rule:
SlipRingTorqueSensorAbsolutEncoderSensorPCBMatchOutputCompressed(?gsrtsabspcb) ^ hasAbsoluteEncoderSensorPCBMatch(?gsrtsabspcb, ?abspcb) ^ hasAbsoluteEncoder(?abspcb, ?ab) ^ hasCurrentRequirement(?didbm, ?r) ^
needContinuousRotationReq(?r, ?ncr) ^ swrlb:equal(?ncr, false) ^
hasDimensionInnerDiameter_d_unit_mm(?ab, ?d_ab) ^ hasMax1_1(?gsrtsabspcb, ?d_need1) ^
swrlb:greaterThanOrEqual(?d_ab, ?d_need1)
-> HalfSatisfiedSlipRingTorqueSensorAbsolutEncoderSensorPCBMatchOutputCompressed(?gsrtsabspcb)


SlipRingTorqueSensorAbsolutEncoderSensorPCBMatchOutputCompressedCalc2Rule:
SlipRingTorqueSensorAbsolutEncoderSensorPCBMatchOutputCompressed(?gsrtsabspcb) ^ hasSlipRingTorqueSensorMatch(?gsrtsabspcb, ?srtsm) ^ hasSlipRing(?srtsm, ?sr) ^ hasAbsoluteEncoderSensorPCBMatch(?gsrtsabspcb, ?abspcb) ^ hasAbsoluteEncoder(?abspcb, ?ab) ^ NoAbsolutEncoder(?ab) ^
hasTorqueSensor(?srtsm, ?tos) ^ Compressed(?tos) ^
hasTorqueSensorAbsolutEncoderMatch(?gsrtsabspcb, ?tsab) ^ hasTorqueSensor(?tsab, ?tos) ^ hasAbsoluteEncoder(?tsab, ?ab) ^
hasSensorPCBOutputVariants(?abspcb, ?spcbv) ^ SatisfiedSensorPCBOutputVariantsCompressed(?spcbv) ^ hasGearBox(?spcbv, ?g) ^
hasDimensionInnerDiameterFlexSpline_K_unit_mm(?g, ?d_g) ^ hasDimensionOuterDiameter_D_unit_mm(?sr, ?D_sr) ^
swrlb:greaterThanOrEqual(?d_g, ?D_sr)
-> SatisfiedSlipRingTorqueSensorAbsolutEncoderSensorPCBMatchOutputCompressed(?gsrtsabspcb)

SlipRingTorqueSensorAbsolutEncoderSensorPCBMatchOutputCompressedCalc3Rule:
SlipRingTorqueSensorAbsolutEncoderSensorPCBMatchOutputCompressed(?gsrtsabspcb) ^ hasSlipRingTorqueSensorMatch(?gsrtsabspcb, ?srtsm) ^ hasSlipRing(?srtsm, ?sr) ^ hasAbsoluteEncoderSensorPCBMatch(?gsrtsabspcb, ?abspcb) ^ hasAbsoluteEncoder(?abspcb, ?ab) ^ AbsolutEncoderOnAxis(?ab) ^
hasTorqueSensor(?srtsm, ?tos) ^ Compressed(?tos) ^
hasTorqueSensorAbsolutEncoderMatch(?gsrtsabspcb, ?tsab) ^ hasTorqueSensor(?tsab, ?tos) ^ hasAbsoluteEncoder(?tsab, ?ab) ^
hasSensorPCBOutputVariants(?abspcb, ?spcbv) ^ SatisfiedSensorPCBOutputVariantsCompressed(?spcbv) ^ hasGearBox(?spcbv, ?g) ^
hasDimensionInnerDiameterFlexSpline_K_unit_mm(?g, ?d_g) ^ hasDimensionOuterDiameter_D_unit_mm(?sr, ?D_sr) ^
swrlb:greaterThanOrEqual(?d_g, ?D_sr)
-> SatisfiedSlipRingTorqueSensorAbsolutEncoderSensorPCBMatchOutputCompressed(?gsrtsabspcb)


SlipRingTorqueSensorAbsolutEncoderSensorPCBMatchOutputCompressedUnsatisfiedRule:
HalfSatisfiedSlipRingTorqueSensorAbsolutEncoderSensorPCBMatchOutputCompressed(?gsrtsabspcb1) ^ hasSlipRingTorqueSensorMatch(?gsrtsabspcb1, ?srtsm) ^ hasAbsoluteEncoderSensorPCBMatch(?gsrtsabspcb1, ?abspcb1) ^ hasAbsoluteEncoder(?abspcb1, ?ab1) ^ hasSensorPCBOutputVariants(?abspcb1, ?spcbv) ^
HalfSatisfiedSlipRingTorqueSensorAbsolutEncoderSensorPCBMatchOutputCompressed(?gsrtsabspcb2) ^ hasSlipRingTorqueSensorMatch(?gsrtsabspcb2, ?srtsm) ^ hasAbsoluteEncoderSensorPCBMatch(?gsrtsabspcb2, ?abspcb2) ^ hasAbsoluteEncoder(?abspcb2, ?ab2) ^ hasSensorPCBOutputVariants(?abspcb2, ?spcbv) ^
hasDimensionOuterDiameter_D_unit_mm(?ab1, ?D_ab1) ^ hasDimensionOuterDiameter_D_unit_mm(?ab2, ?D_ab2) ^
swrlb:greaterThan(?D_ab1, ?D_ab2) ^ swrlb:lessThan(?D_ab2, ?D_ab1)
-> UnsatisfiedSlipRingTorqueSensorAbsolutEncoderSensorPCBMatchOutputCompressed(?gsrtsabspcb1)

SlipRingTorqueSensorAbsolutEncoderSensorPCBMatchOutputCompressedPossibleSatisfiedRule:
HalfSatisfiedSlipRingTorqueSensorAbsolutEncoderSensorPCBMatchOutputCompressed(?gsrtsabspcb1) ^ hasSlipRingTorqueSensorMatch(?gsrtsabspcb1, ?srtsm) ^ hasAbsoluteEncoderSensorPCBMatch(?gsrtsabspcb1, ?abspcb1) ^ hasAbsoluteEncoder(?abspcb1, ?ab1) ^ hasSensorPCBOutputVariants(?abspcb1, ?spcbv) ^
HalfSatisfiedSlipRingTorqueSensorAbsolutEncoderSensorPCBMatchOutputCompressed(?gsrtsabspcb2) ^ hasSlipRingTorqueSensorMatch(?gsrtsabspcb2, ?srtsm) ^ hasAbsoluteEncoderSensorPCBMatch(?gsrtsabspcb2, ?abspcb2) ^ hasAbsoluteEncoder(?abspcb2, ?ab2) ^ hasSensorPCBOutputVariants(?abspcb2, ?spcbv) ^
hasDimensionOuterDiameter_D_unit_mm(?ab1, ?D_ab1) ^ hasDimensionOuterDiameter_D_unit_mm(?ab2, ?D_ab2) ^
swrlb:equal(?D_ab2, ?D_ab1)
-> PossibleSatisfiedSlipRingTorqueSensorAbsolutEncoderSensorPCBMatchOutputCompressed(?gsrtsabspcb1) ^ PossibleSatisfiedSlipRingTorqueSensorAbsolutEncoderSensorPCBMatchOutputCompressed(?gsrtsabspcb2)



OutputBearingScrewMatchRule:
OutputBearing(?ob) ^
hasDimensionScrewInnerDiameterM_d_unit_mm(?ob, ?d_ob) ^ Screw(?s_ob) ^ hasDimensionScrewInnerDiameterM_d_unit_mm(?s_ob, ?d_s_ob) ^ swrlb:equal(?d_ob, ?d_s_ob)
-> hasScrew(?ob, ?s_ob)


LengthOutputBeforeCalc1Rule:
LengthOutput(?lo) ^ hasLengthInput(?lo, ?li) ^ hasDiameterOutputBearing(?lo, ?dob) ^ hasDiameterOutput(?dob, ?do) ^ hasSlipRingTorqueSensorAbsolutEncoderSensorPCBMatch(?do, ?gsrtsabspcb) ^ hasAbsoluteEncoderSensorPCBMatch(?gsrtsabspcb, ?abspcb) ^ hasSensorPCBOutputVariants(?abspcb, ?spcbv) ^ hasGearBox(?spcbv, ?g) ^ hasSlipRingTorqueSensorMatch(?gsrtsabspcb, ?srtsm) ^ hasSlipRing(?srtsm, ?sr) ^ hasConstant(?lo, ?con) ^
hasDimensionInnerDiameterWaveGenerator_unit_mm(?g, ?d_wg_g) ^ hasMax1_1(?sr, ?d_sr) ^ diameterSafetySlipRingInGearBox(?c, ?c_d) ^
swrlb:add(?d_max, ?d_sr, ?c_d) ^ swrlb:greaterThanOrEqual(?d_wg_g, ?d_max) ^
hasDimensionLengthInner_L_unit_mm(?sr, ?l_sr) ^ hasDimensionLength_L_unit_mm(?sr, ?L_sr) ^ hasDimensionLength_L_unit_mm(?li, ?L_li) ^ hasDimensionLength_L_unit_mm(?g, ?L_g) ^
swrlb:add(?temp1, ?l_sr, ?L_sr) ^ swrlb:subtract(?temp2, ?temp1, ?L_li) ^ swrlb:subtract(?L_max3_2, ?temp2, ?L_g)
-> hasMax3_2(?lo, ?L_max3_2)


LengthOutputBeforeCalc2Rule:
LengthOutput(?lo) ^ hasDiameterOutputBearing(?lo, ?dob) ^ hasDiameterOutput(?dob, ?do) ^
hasSlipRingTorqueSensorAbsolutEncoderSensorPCBMatch(?do, ?gsrtsabspcb) ^ hasAbsoluteEncoderSensorPCBMatch(?gsrtsabspcb, ?abspcb) ^ hasSensorPCBOutputVariants(?abspcb, ?spcbv) ^ hasGearBox(?spcbv, ?g) ^ hasSlipRingTorqueSensorMatch(?gsrtsabspcb, ?srtsm) ^ hasSlipRing(?srtsm, ?sr) ^ hasConstant(?lo, ?con) ^
hasDimensionInnerDiameterWaveGenerator_unit_mm(?g, ?d_wg_g) ^ hasMax1_1(?sr, ?d_sr) ^ diameterSafetySlipRingInGearBox(?c, ?c_d) ^
swrlb:add(?d_max, ?d_sr, ?c_d) ^ swrlb:lessThan(?d_wg_g, ?d_max) ^
hasDimensionLength_L_unit_mm(?sr, ?L_sr) ^ hasDimensionLength_L_unit_mm(?g, ?L_g) ^ hasDimensionLengthWaveGenerator_H_unit_mm(?g, ?L_wg_g) ^
swrlb:subtract(?temp1, ?L_sr, ?L_g) ^ swrlb:add(?L_max3_2, ?temp1, ?L_wg_g)
-> hasMax3_2(?lo, ?L_max3_2)



LengthOutputLinearCalcRule:
LengthOutputLinear(?lo) ^ hasDiameterOutputBearing(?lo, ?dob) ^ hasDiameterOutput(?dob, ?do) ^ hasSlipRingTorqueSensorAbsolutEncoderSensorPCBMatch(?do, ?gsrtsabspcb) ^ hasAbsoluteEncoderSensorPCBMatch(?gsrtsabspcb, ?abspcb) ^ hasSensorPCBOutputVariants(?abspcb, ?spcbv) ^ hasGearBox(?spcbv, ?g) ^ hasSlipRingTorqueSensorMatch(?gsrtsabspcb, ?srtsm) ^ hasTorqueSensor(?srtsm, ?tos) ^ hasConstant(?lo, ?con) ^
hasDimensionScrewInnerDiameterFlexSplineM_d_unit_mm(?g, ?d_g_fs) ^ hasDimensionLengthFaktor(?tos, ?Lf_ts) ^ hasDimensionLength_L_unit_mm(?abspcb, ?L_loie) ^
lengthNotch(?con, ?n_con) ^ lengthMeasurementWidth(?con, ?mw_con) ^
swrlb:multiply(?L_2kerbe, 2.0, ?n_con) ^ swrlb:add(?L_torWelleTemp1, ?mw_con, ?L_2kerbe) ^ swrlb:multiply(?L_torWelleTemp2, ?d_g_fs, 1.5) ^ swrlb:multiply(?L_torWelleTemp3, 2.0, ?L_torWelleTemp2) ^ swrlb:add(?L_torWelleTemp4, ?L_torWelleTemp1, ?L_torWelleTemp3) ^ swrlb:multiply(?L_torWelle, ?Lf_ts, ?L_torWelleTemp4)
-> has2(?lo, ?L_torWelle) ^ has3(?lo, ?L_loie) ^ has4(?lo, 0.0) ^ has5(?lo, 0.0) ^ has6(?lo, 0.0) ^ Linear(?lo) ^ hasNumberOfOutputBearings(?lo, 1.0)


LengthOutputCompressedCalcRule:
LengthOutputCompressed(?lo) ^ hasDiameterOutputBearing(?lo, ?dob) ^ hasDiameterOutput(?dob, ?do) ^ hasSlipRingTorqueSensorAbsolutEncoderSensorPCBMatch(?do, ?gsrtsabspcb) ^ hasAbsoluteEncoderSensorPCBMatch(?gsrtsabspcb, ?abspcb) ^ hasSensorPCBOutputVariants(?abspcb, ?spcbv) ^ hasGearBox(?spcbv, ?g) ^
hasDimensionLengthOverlapping_unit_mm(?g, ?L_overlap) ^ hasDimensionLength_L_unit_mm(?abspcb, ?L_elecInnerOnDriveSide)
-> has2(?lo, 0.0) ^ has3(?lo, 0.0) ^ has4(?lo, ?L_overlap) ^ has5(?lo, ?L_elecInnerOnDriveSide) ^ has6(?lo, 0.0) ^ Compressed(?lo) ^ hasNumberOfOutputBearings(?lo, 1.0)


LengthOutputTwoSideCalcRule:
LengthOutputTwoSide(?lo) ^ hasDiameterOutputBearing(?lo, ?dob) ^ hasDiameterOutput(?dob, ?do) ^ hasOutputBearing(?dob, ?ob) ^ hasScrew(?ob, ?s_ob) ^ hasSlipRingTorqueSensorAbsolutEncoderSensorPCBMatch(?do, ?gsrtsabspcb) ^ hasAbsoluteEncoderSensorPCBMatch(?gsrtsabspcb, ?abspcb) ^ hasSensorPCBOutputVariants(?abspcb, ?spcbv) ^ hasGearBox(?spcbv, ?g) ^ hasConstant(?lo, ?con) ^
hasDimensionLengthOverlapping_unit_mm(?g, ?L_overlap) ^ hasDimensionLength_L_unit_mm(?abspcb, ?L_elecInnerOnDriveSide) ^ hasDimensionLength_L_unit_mm(?ob, ?L_ob) ^ hasDimensionLengthScrewHead_k_unit_mm(?s_ob, ?L_s_ob) ^ lengthCentering(?con, ?c_con) ^
swrlb:multiply(?L_abLagerTemp1, 1.5, ?L_ob) ^ swrlb:add(?L_abLager, ?L_abLagerTemp1, ?c_con) ^ swrlb:multiply(?L_s_ob2, 2.0, ?L_s_ob) ^ swrlb:add(?L_2ndOutput, ?L_s_ob2, ?L_abLager)
->  has2(?lo, 0.0) ^ has3(?lo, 0.0) ^ has4(?lo, ?L_overlap) ^ has5(?lo, ?L_elecInnerOnDriveSide) ^ has6(?lo, ?L_2ndOutput) ^ TwoSide(?lo) ^ hasNumberOfOutputBearings(?lo, 2.0)


LengthOutputCalcRule:
LengthOutput(?lo) ^ hasDiameterOutputBearing(?lo, ?dob) ^ hasDiameterOutput(?dob, ?do) ^ hasOutputBearing(?dob, ?ob) ^ hasScrew(?ob, ?s_ob) ^ hasSlipRingTorqueSensorAbsolutEncoderSensorPCBMatch(?do, ?gsrtsabspcb) ^ hasSlipRingTorqueSensorMatch(?gsrtsabspcb, ?srtsm) ^ hasTorqueSensor(?srtsm, ?tos) ^ hasAbsoluteEncoderSensorPCBMatch(?gsrtsabspcb, ?abspcb) ^ hasAbsoluteEncoder(?abspcb, ?ab) ^ hasSensorPCBOutputVariants(?abspcb, ?spcbv) ^ hasGearBox(?spcbv, ?g) ^ hasFlexSplineScrew(?g, ?s_g_fs) ^ hasConstant(?lo, ?con) ^
hasLengthInput(?lo, ?li) ^ hasDiameterInputDriveBearingMatch(?li, ?didbm) ^ hasDiameterInput(?didbm, ?di) ^ hasDiameterElektro(?di, ?de) ^ hasMotor(?de, ?m) ^ hasSlipRingTorqueSensorAbsolutEncoderSensorPCBMatch(?de, ?gsrtsabspcb) ^
SatisfiedMotorGearBoxMatchForSACunit(?ma) ^ hasGearBox(?ma, ?g) ^ hasMotor(?ma, ?m) ^
has2(?lo, ?L_torWelle) ^ has3(?lo, ?L_loie) ^ has4(?lo, ?L_overlap) ^
hasDimensionScrewInnerDiameterFlexSplineM_d_unit_mm(?g, ?d_g_fs) ^ hasDimensionLengthScrewHead_k_unit_mm(?s_g_fs, ?L_s_g_fs) ^ hasDimensionLength_L_unit_mm(?ob, ?L_ob) ^ hasDimensionLengthScrewHead_k_unit_mm(?s_ob, ?L_s_ob) ^ has1(?tos, ?L_ADC) ^ lengthCentering(?con, ?c_con) ^
swrlb:multiply(?L_s_g_fs2, 2.0, ?L_s_g_fs) ^ swrlb:add(?L_temp1, ?L_torWelle, ?L_s_g_fs2) ^ swrlb:add(?L_max1_1, ?L_temp1, ?L_ADC) ^
swrlb:multiply(?d_g_fs15, 1.5, ?d_g_fs) ^ swrlb:add(?L_max1_2, ?d_g_fs15, ?L_ADC) ^
swrlb:multiply(?L_abLagerTemp1, 1.5, ?L_ob) ^ swrlb:add(?L_abLager, ?L_abLagerTemp1, ?c_con) ^
swrlb:add(?temp1, ?L_loie, ?L_abLager) ^ swrlb:multiply(?L_s_ob2, 2.0, ?L_s_ob) ^ swrlb:add(?temp2, ?temp1, ?L_s_ob2) ^ swrlb:subtract(?L_max2_1, ?temp2, ?L_overlap) ^
hasTorqueSensorAbsolutEncoderMatch(?gsrtsabspcb, ?tsab) ^
hasDimensionLength_L_unit_mm(?g, ?L_g) ^ has6(?lo, ?L_2ndOutput) ^ has1(?tsab, ?L_ab_second) ^
swrlb:add(?temp21, ?L_g, ?L_2ndOutput) ^ swrlb:add(?L_rest, ?temp21, ?L_ab_second)
-> hasMax1_1(?lo, ?L_max1_1) ^ hasMax1_2(?lo, ?L_max1_2) ^ hasMax2_1(?lo, ?L_max2_1) ^ has7(?lo, ?L_rest)



LengthOutputEvaluate1Rule:
LengthOutput(?lo) ^
hasMax1_1(?lo, ?L_max1_1) ^ hasMax1_2(?lo, ?L_max1_2) ^
swrlb:greaterThan(?L_max1_1, ?L_max1_2)
-> hasMax2_2(?lo, ?L_max1_1)

LengthOutputEvaluate2Rule:
LengthOutput(?lo) ^
hasMax1_1(?lo, ?L_max1_1) ^ hasMax1_2(?lo, ?L_max1_2) ^
swrlb:lessThanOrEqual(?L_max1_1, ?L_max1_2)
-> hasMax2_2(?lo, ?L_max1_2)


LengthOutputEvaluate3Rule:
LengthOutput(?lo) ^
hasMax2_1(?lo, ?L_max2_1) ^ hasMax2_2(?lo, ?L_max2_2) ^
swrlb:greaterThan(?L_max2_1, ?L_max2_2)
-> hasMax3_1(?lo, ?L_max2_1)

LengthOutputEvaluate4Rule:
LengthOutput(?lo) ^
hasMax2_1(?lo, ?L_max2_1) ^ hasMax2_2(?lo, ?L_max2_2) ^
swrlb:lessThanOrEqual(?L_max2_1, ?L_max2_2)
-> hasMax3_1(?lo, ?L_max2_2)


LengthOutputLinearEvaluate1Rule:
LengthOutputLinear(?lo) ^
hasMax3_1(?lo, ?L_max3_1) ^ hasMax3_2(?lo, ?L_max3_2) ^
swrlb:greaterThan(?L_max3_1, ?L_max3_2) ^
has7(?lo, ?L_rest) ^
swrlb:add(?L_ges, ?L_max3_1, ?L_rest)
-> hasDimensionLength_L_unit_mm(?lo, ?L_ges) ^ SatisfiedLengthOutputLinear(?lo)

LengthOutputLinearEvaluate2Rule:
LengthOutputLinear(?lo) ^
hasMax3_1(?lo, ?L_max3_1) ^ hasMax3_2(?lo, ?L_max3_2) ^
swrlb:lessThanOrEqual(?L_max3_1, ?L_max3_2) ^
has7(?lo, ?L_rest) ^
swrlb:add(?L_ges, ?L_max3_2, ?L_rest)
-> hasDimensionLength_L_unit_mm(?lo, ?L_ges) ^ SatisfiedLengthOutputLinear(?lo)


LengthOutputCompressedEvaluate1Rule:
LengthOutputCompressed(?lo) ^
hasMax3_1(?lo, ?L_max3_1) ^ hasMax3_2(?lo, ?L_max3_2) ^
swrlb:greaterThan(?L_max3_1, ?L_max3_2) ^
has7(?lo, ?L_rest) ^
swrlb:add(?L_ges, ?L_max3_1, ?L_rest)
-> hasDimensionLength_L_unit_mm(?lo, ?L_ges) ^ SatisfiedLengthOutputCompressed(?lo)

LengthOutputCompressedEvaluate2Rule:
LengthOutputCompressed(?lo) ^
hasMax3_1(?lo, ?L_max3_1) ^ hasMax3_2(?lo, ?L_max3_2) ^
swrlb:lessThanOrEqual(?L_max3_1, ?L_max3_2) ^
has7(?lo, ?L_rest) ^
swrlb:add(?L_ges, ?L_max3_2, ?L_rest)
-> hasDimensionLength_L_unit_mm(?lo, ?L_ges) ^ SatisfiedLengthOutputCompressed(?lo)


LengthOutputTwoSideEvaluate1Rule:
LengthOutputTwoSide(?lo) ^
hasMax3_1(?lo, ?L_max3_1) ^ hasMax3_2(?lo, ?L_max3_2) ^
swrlb:greaterThan(?L_max3_1, ?L_max3_2) ^
has7(?lo, ?L_rest) ^
swrlb:add(?L_ges, ?L_max3_1, ?L_rest)
-> hasDimensionLength_L_unit_mm(?lo, ?L_ges) ^ SatisfiedLengthOutputTwoSide(?lo)

LengthOutputTwoSideEvaluate2Rule:
LengthOutputTwoSide(?lo) ^
hasMax3_1(?lo, ?L_max3_1) ^ hasMax3_2(?lo, ?L_max3_2) ^
swrlb:lessThanOrEqual(?L_max3_1, ?L_max3_2) ^
has7(?lo, ?L_rest) ^
swrlb:add(?L_ges, ?L_max3_2, ?L_rest)
-> hasDimensionLength_L_unit_mm(?lo, ?L_ges) ^ SatisfiedLengthOutputTwoSide(?lo)




LengthElektroCalc1Rule:
LengthElektro(?le) ^ hasLengthOutput(?le, ?lo) ^ hasLengthInput(?lo, ?li) ^ hasIncrementalEncoderHallSensorMatch(?li, ?iehs) ^ hasIncrementalEncoder(?iehs, ?ie) ^
hasDiameterInputDriveBearingMatch(?li, ?didbm) ^ hasDiameterInput(?didbm, ?di) ^ hasDiameterElektro(?di, ?de) ^ hasSlipRingTorqueSensorAbsolutEncoderSensorPCBMatch(?de, ?gsrtsabspcb) ^ hasAbsoluteEncoderSensorPCBMatch(?gsrtsabspcb, ?abspcb) ^ hasAbsoluteEncoder(?abspcb, ?ab) ^
hasDimensionLengthIncrementalEncoderConnector_L_unit_mm(?ie, ?L_iec) ^ hasDimensionLengthIncrementalEncoderConnector_L_unit_mm(?ab, ?L_abc)
swrlb:greaterThan(?L_iec, ?L_abc)
-> has1(?le, ?L_iec)

LengthElektroCalc2Rule:
LengthElektro(?le) ^ hasLengthOutput(?le, ?lo) ^ hasLengthInput(?lo, ?li) ^ hasIncrementalEncoderHallSensorMatch(?li, ?iehs) ^ hasIncrementalEncoder(?iehs, ?ie) ^
hasDiameterInputDriveBearingMatch(?li, ?didbm) ^ hasDiameterInput(?didbm, ?di) ^ hasDiameterElektro(?di, ?de) ^ hasSlipRingTorqueSensorAbsolutEncoderSensorPCBMatch(?de, ?gsrtsabspcb) ^ hasAbsoluteEncoderSensorPCBMatch(?gsrtsabspcb, ?abspcb) ^ hasAbsoluteEncoder(?abspcb, ?ab) ^
hasDimensionLengthIncrementalEncoderConnector_L_unit_mm(?ie, ?L_iec) ^ hasDimensionLengthIncrementalEncoderConnector_L_unit_mm(?ab, ?L_abc)
swrlb:lessThanOrEqual(?L_iec, ?L_abc)
-> has1(?le, ?L_abc)


LengthElektroSatisfy1Rule:
LengthElektro(?le) ^ hasLengthOutput(?le, ?lo) ^ hasLengthInput(?lo, ?li) ^ hasDiameterInputDriveBearingMatch(?li, ?didbm) ^ hasDiameterInput(?didbm, ?di) ^ hasDiameterElektro(?di, ?de) ^ hasMotorControllerPositionMatch(?de, ?mcpm) ^
has5(?mcpm, ?L_wiringConduit) ^ has1(?mcpm, ?L_axial) ^ has5(?lo, ?L_elecInnerOnDriveSide) ^
swrlb:add(?L_1, ?L_axial, ?L_elecInnerOnDriveSide) ^
swrlb:greaterThan(?L_1, ?L_wiringConduit)
-> hasMax1_1(?le, ?L_1)

LengthElektroSatisfy2Rule:
LengthElektro(?le) ^ hasLengthOutput(?le, ?lo) ^ hasLengthInput(?lo, ?li) ^ hasDiameterInputDriveBearingMatch(?li, ?didbm) ^ hasDiameterInput(?didbm, ?di) ^ hasDiameterElektro(?di, ?de) ^ hasMotorControllerPositionMatch(?de, ?mcpm) ^
has5(?mcpm, ?L_wiringConduit) ^ has1(?mcpm, ?L_axial) ^ has5(?lo, ?L_elecInnerOnDriveSide) ^
swrlb:add(?L_1, ?L_axial, ?L_elecInnerOnDriveSide) ^
swrlb:lessThanOrEqual(?L_1, ?L_wiringConduit)
-> hasMax1_1(?le, ?L_wiringConduit)


LengthElektroSatisfy3Rule:
LengthElektro(?le) ^ hasCurrentRequirement(?le, ?r) ^
hasMax1_1(?le, ?L_max1_1) ^ has1(?le, ?L_in_connector) ^ hasThicknessCoverReq_t_unit_mm(?r, ?t_req_c) ^
swrlb:greaterThan(?L_in_connector, ?L_max1_1) ^ swrlb:add(?L_le, ?L_in_connector, ?t_req_c)
-> hasDimensionLength_L_unit_mm(?le, ?L_le)

LengthElektroSatisfy4Rule:
LengthElektro(?le) ^ hasCurrentRequirement(?le, ?r) ^
hasMax1_1(?le, ?L_max1_1) ^ has1(?le, ?L_in_connector) ^ hasThicknessCoverReq_t_unit_mm(?r, ?t_req_c) ^
swrlb:lessThanOrEqual(?L_in_connector, ?L_max1_1) ^ swrlb:add(?L_le, ?L_max1_1, ?t_req_c)
-> hasDimensionLength_L_unit_mm(?le, ?L_le)



LengthCalcRule:
Length(?l) ^ hasLengthElektro(?l, ?le) ^ hasLengthOutput(?le, ?lo) ^ hasLengthInput(?lo, ?li) ^
hasDimensionLength_L_unit_mm(?le, ?L_le) ^ hasDimensionLength_L_unit_mm(?li, ?L_li) ^ hasDimensionLength_L_unit_mm(?lo, ?L_lo) ^
swrlb:add(?L_temp1, ?L_li, ?L_lo) ^ swrlb:add(?L_ges, ?L_temp1, ?L_le)
-> hasDimensionLength_L_unit_mm(?l, ?L_ges)


LengthSatisfyRule:
Length(?l) ^ hasDimensionLength_L_unit_mm(?l, ?L_ges) ^ hasCurrentRequirement(?l, ?r) ^ hasDimensionLengthReqMax_L_unit_mm(?r, ?L_req_max) ^ swrlb:lessThanOrEqual(?L_ges, ?L_req_max) ^ hasDimensionLengthReqMin_L_unit_mm(?r, ?L_req_min) ^ swrlb:greaterThanOrEqual(?L_ges, ?L_req_min) -> SatisfiedLength(?l)



DiameterElektroOutputLinearEvaluateAndCalc1Rule:
DiameterElektroOutputLinear(?de) ^ hasMotor(?de, ?m) ^ hasMotorControllerPositionMatch(?de, ?mcpm) ^
hasDimensionOuterDiameter_D_unit_mm(?m, ?D_m) ^ has2(?mcpm, ?H_axial) ^
swrlb:greaterThan(?D_m, ?H_axial) ^
hasCurrentRequirement(?de, ?r) ^ hasThicknessCoverReq_t_unit_mm(?r, ?t_req_c) ^
swrlb:multiply(?t_req_c2, 2.0, ?t_req_c) ^ swrlb:add(?D_drive_electro, ?t_req_c2, ?D_m)
-> hasDimensionOuterDiameter_D_unit_mm(?de, ?D_drive_electro)

DiameterElektroOutputLinearEvaluateAndCalc2Rule:
DiameterElektroOutputLinear(?de) ^ hasMotor(?de, ?m) ^ hasMotorControllerPositionMatch(?de, ?mcpm) ^
hasDimensionOuterDiameter_D_unit_mm(?m, ?D_m) ^ has2(?mcpm, ?H_axial) ^
swrlb:lessThanOrEqual(?D_m, ?H_axial) ^
hasCurrentRequirement(?de, ?r) ^ hasThicknessCoverReq_t_unit_mm(?r, ?t_req_c) ^
swrlb:multiply(?t_req_c2, 2.0, ?t_req_c) ^ swrlb:add(?D_drive_electro, ?t_req_c2, ?H_axial)
-> hasDimensionOuterDiameter_D_unit_mm(?de, ?D_drive_electro)


DiameterElektroOutputCompressedEvaluate1Rule:
DiameterElektroOutputCompressed(?de) ^ hasMotorControllerPositionMatch(?de, ?mcpm) ^ hasSlipRingTorqueSensorAbsolutEncoderSensorPCBMatch(?de, ?gsrtsabspcb) ^ hasAbsoluteEncoderSensorPCBMatch(?gsrtsabspcb, ?abspcb) ^ hasSensorPCBOutputVariants(?abspcb, ?spcbv) ^ hasAbsoluteEncoder(?abspcb, ?ab) ^
hasDimensionOuterDiameter_D_unit_mm(?ab, ?D_ab) ^ hasDimensionOuterDiameter_D_unit_mm(?spcbv, ?D_spcb) ^
swrlb:greaterThan(?D_ab, ?D_spcb)
-> hasMax1_1(?de, ?D_ab)

DiameterElektroOutputCompressedEvaluate2Rule:
DiameterElektroOutputCompressed(?de) ^ hasMotorControllerPositionMatch(?de, ?mcpm) ^ hasSlipRingTorqueSensorAbsolutEncoderSensorPCBMatch(?de, ?gsrtsabspcb) ^ hasAbsoluteEncoderSensorPCBMatch(?gsrtsabspcb, ?abspcb) ^ hasSensorPCBOutputVariants(?abspcb, ?spcbv) ^ hasAbsoluteEncoder(?abspcb, ?ab) ^
hasDimensionOuterDiameter_D_unit_mm(?ab, ?D_ab) ^ hasDimensionOuterDiameter_D_unit_mm(?spcbv, ?D_spcb) ^
swrlb:lessThanOrEqual(?D_ab, ?D_spcb)
-> hasMax1_1(?de, ?D_spcb)

DiameterElektroOutputCompressedEvaluate3Rule:
DiameterElektroOutputCompressed(?de) ^ hasMotor(?de, ?m)
hasMax1_1(?de, ?D_max1) ^ hasDimensionOuterDiameter_D_unit_mm(?m, ?D_m) ^
swrlb:greaterThan(?D_max1, ?D_m)
-> hasMax2_1(?de, ?D_max1)

DiameterElektroOutputCompressedEvaluate4Rule:
DiameterElektroOutputCompressed(?de) ^ hasMotor(?de, ?m)
hasMax1_1(?de, ?D_max1) ^ hasDimensionOuterDiameter_D_unit_mm(?m, ?D_m) ^
swrlb:lessThanOrEqual(?D_max1, ?D_m)
-> hasMax2_1(?de, ?D_m)


DiameterElektroOutputCompressedEvaluateAndCalc1Rule:
DiameterElektroOutputCompressed(?de) ^ hasMotorControllerPositionMatch(?de, ?mcpm) ^
hasMax2_1(?de, ?D_max2_1) ^ has2(?mcpm, ?H_axial) ^
swrlb:greaterThan(?D_max2_1, ?H_axial) ^
hasCurrentRequirement(?de, ?r) ^ hasThicknessCoverReq_t_unit_mm(?r, ?t_req_c) ^
swrlb:multiply(?t_req_c2, 2.0, ?t_req_c) ^ swrlb:add(?D_drive_electro, ?t_req_c2, ?D_max2_1)
-> hasDimensionOuterDiameter_D_unit_mm(?de, ?D_drive_electro)

DiameterElektroOutputCompressedEvaluateAndCalc2Rule:
DiameterElektroOutputCompressed(?de) ^ hasMotorControllerPositionMatch(?de, ?mcpm) ^
hasMax2_1(?de, ?D_max2_1) ^ has2(?mcpm, ?H_axial) ^
swrlb:lessThanOrEqual(?D_max2_1, ?H_axial) ^
hasCurrentRequirement(?de, ?r) ^ hasThicknessCoverReq_t_unit_mm(?r, ?t_req_c) ^
swrlb:multiply(?t_req_c2, 2.0, ?t_req_c) ^ swrlb:add(?D_drive_electro, ?t_req_c2, ?H_axial)
-> hasDimensionOuterDiameter_D_unit_mm(?de, ?D_drive_electro)


DiameterElektroLinearSatisfyRule:
DiameterElektroOutputLinear(?de) ^
hasSlipRingTorqueSensorAbsolutEncoderSensorPCBMatch(?de, ?gsrtsabspcb) ^ hasAbsoluteEncoderSensorPCBMatch(?gsrtsabspcb, ?abspcb) ^ hasSensorPCBOutputVariants(?abspcb, ?spcbv) ^ hasGearBox(?spcbv, ?g) ^ hasMotor(?de, ?m) ^
SatisfiedMotorGearBoxMatchForSACunit(?ma) ^ hasGearBox(?ma, ?g) ^ hasMotor(?ma, ?m) ^
hasDimensionOuterDiameter_D_unit_mm(?de, ?D_elektro) ^ hasCurrentRequirement(?de, ?r) ^ hasDimensionOuterDiameterReqMax_D_unit_mm(?r, ?D_req_max) ^ swrlb:lessThanOrEqual(?D_elektro, ?D_req_max)
-> SatisfiedDiameterElektroOutputLinear(?de)

DiameterElektroCompressedSatisfyRule:
DiameterElektroOutputCompressed(?de) ^
hasSlipRingTorqueSensorAbsolutEncoderSensorPCBMatch(?de, ?gsrtsabspcb) ^ hasAbsoluteEncoderSensorPCBMatch(?gsrtsabspcb, ?abspcb) ^ hasSensorPCBOutputVariants(?abspcb, ?spcbv) ^ hasGearBox(?spcbv, ?g) ^ hasMotor(?de, ?m) ^
SatisfiedMotorGearBoxMatchForSACunit(?ma) ^ hasGearBox(?ma, ?g) ^ hasMotor(?ma, ?m) ^
hasDimensionOuterDiameter_D_unit_mm(?de, ?D_elektro) ^ hasCurrentRequirement(?de, ?r) ^ hasDimensionOuterDiameterReqMax_D_unit_mm(?r, ?D_req_max) ^ swrlb:lessThanOrEqual(?D_elektro, ?D_req_max)
-> SatisfiedDiameterElektroOutputCompressed(?de)



DiameterInputCalcRule:
DiameterInput(?di) ^ hasDiameterElektro(?di, ?de) ^ hasMotor(?de, ?m) ^
hasDimensionOuterDiameter_D_unit_mm(?m, ?D_m) ^ hasCurrentRequirement(?di, ?r) ^ hasThicknessEngineCaseReq_D_unit_mm(?r, ?tec_r) ^
swrlb:multiply(?dec, ?tec_r, 2.0) ^ swrlb:add(?D_input, ?dec, ?D_m)
-> hasDimensionOuterDiameter_D_unit_mm(?di, ?D_input)

DiameterInputSatisfyRule:
DiameterInput(?di) ^ hasDimensionOuterDiameter_D_unit_mm(?di, ?D_input) ^ hasCurrentRequirement(?di, ?r) ^ hasDimensionOuterDiameterReqMax_D_unit_mm(?r, ?D_req_max) ^ swrlb:lessThanOrEqual(?D_input, ?D_req_max) -> SatisfiedDiameterInput(?di)


DiameterInputStructureSatisfy1Rule:
SatisfiedDiameterInput(?di) ^ hasCurrentRequirement(?di, ?r) ^
chooseDriveStructure(?r, ?cds) ^ swrlb:equal(?cds, "Any")
-> SatisfiedDiameterInputLinear(?di) ^ SatisfiedDiameterInputCompressed(?di)

DiameterInputStructureSatisfy2Rule:
SatisfiedDiameterInput(?di) ^ hasCurrentRequirement(?di, ?r) ^
chooseDriveStructure(?r, ?cds) ^ swrlb:equal(?cds, "Linear")
-> SatisfiedDiameterInputLinear(?di)

DiameterInputStructureSatisfy3Rule:
SatisfiedDiameterInput(?di) ^ hasCurrentRequirement(?di, ?r) ^
chooseDriveStructure(?r, ?cds) ^ swrlb:equal(?cds, "Compressed")
-> SatisfiedDiameterInputCompressed(?di)



DiameterOutputLinearBeforeEvaluate1Rule:
DiameterOutputLinear(?do) ^ hasSlipRingTorqueSensorAbsolutEncoderSensorPCBMatch(?do, ?gsrtsabspcb) ^ hasAbsoluteEncoderSensorPCBMatch(?gsrtsabspcb, ?abspcb) ^ hasAbsoluteEncoder(?abspcb, ?ab) ^ hasSensorPCBOutputVariants(?abspcb, ?spcbv) ^
hasDimensionOuterDiameter_D_unit_mm(?ab, ?D_ab) ^ hasDimensionOuterDiameter_D_unit_mm(?spcbv, ?D_spcb) ^
swrlb:greaterThan(?D_ab, ?D_spcb) ^
hasConstant(?do, ?con) ^ thicknessElectroOutputSafetyDistance(?con, ?t_eosd) ^
swrlb:multiply(?t_eosd2, 2.0, ?t_eosd) ^ swrlb:add(?D_electro_output, ?D_ab, ?t_eosd2)
-> has3(?do, ?D_electro_output)

DiameterOutputLinearBeforeEvaluate2Rule:
DiameterOutputLinear(?do) ^ hasSlipRingTorqueSensorAbsolutEncoderSensorPCBMatch(?do, ?gsrtsabspcb) ^ hasAbsoluteEncoderSensorPCBMatch(?gsrtsabspcb, ?abspcb) ^ hasAbsoluteEncoder(?abspcb, ?ab) ^ hasSensorPCBOutputVariants(?abspcb, ?spcbv) ^
hasDimensionOuterDiameter_D_unit_mm(?ab, ?D_ab) ^ hasDimensionOuterDiameter_D_unit_mm(?spcbv, ?D_spcb) ^
swrlb:lessThanOrEqual(?D_ab, ?D_spcb) ^
hasConstant(?do, ?con) ^ thicknessElectroOutputSafetyDistance(?con, ?t_eosd) ^
swrlb:multiply(?t_eosd2, 2.0, ?t_eosd) ^ swrlb:add(?D_electro_output, ?D_spcb, ?t_eosd2)
-> has3(?do, ?D_electro_output)


DiameterOutputLinearBeforeEvaluate3Rule:
DiameterOutputLinear(?do) ^ hasSlipRingTorqueSensorAbsolutEncoderSensorPCBMatch(?do, ?gsrtsabspcb) ^ hasAbsoluteEncoderSensorPCBMatch(?gsrtsabspcb, ?abspcb) ^ hasConstant(?do, ?con) ^ hasCurrentRequirement(?do, ?r) ^
hasDimensionLength_L_unit_mm(?abspcb, ?L_loie) ^ diameterWiring(?con, ?D_w) ^ needHiddenControl(?r, ?nhc) ^
swrlb:notEqual(?L_loie, 0.0) ^ swrlb:equal(?nhc, true)
-> has2(?do, ?D_w)

DiameterOutputLinearBeforeEvaluate4Rule:
DiameterOutputLinear(?do) ^ hasSlipRingTorqueSensorAbsolutEncoderSensorPCBMatch(?do, ?gsrtsabspcb) ^ hasAbsoluteEncoderSensorPCBMatch(?gsrtsabspcb, ?abspcb) ^ hasCurrentRequirement(?do, ?r) ^
hasDimensionLength_L_unit_mm(?abspcb, ?L_loie) ^ needHiddenControl(?r, ?nhc) ^
swrlb:equal(?L_loie, 0.0) ^ swrlb:equal(?nhc, true)
-> has2(?do, 0.0)

DiameterOutputLinearBeforeEvaluate5Rule:
DiameterOutputLinear(?do) ^ hasSlipRingTorqueSensorAbsolutEncoderSensorPCBMatch(?do, ?gsrtsabspcb) ^ hasAbsoluteEncoderSensorPCBMatch(?gsrtsabspcb, ?abspcb) ^ hasCurrentRequirement(?do, ?r) ^
hasDimensionLength_L_unit_mm(?abspcb, ?L_loie) ^ needHiddenControl(?r, ?nhc) ^
swrlb:equal(?L_loie, 0.0) ^ swrlb:equal(?nhc, false)
-> has2(?do, 0.0)

DiameterOutputLinearBeforeEvaluate6Rule:
DiameterOutputLinear(?do) ^ hasSlipRingTorqueSensorAbsolutEncoderSensorPCBMatch(?do, ?gsrtsabspcb) ^ hasAbsoluteEncoderSensorPCBMatch(?gsrtsabspcb, ?abspcb) ^ hasCurrentRequirement(?do, ?r) ^
hasDimensionLength_L_unit_mm(?abspcb, ?L_loie) ^ needHiddenControl(?r, ?nhc) ^
swrlb:notEqual(?L_loie, 0.0) ^ swrlb:equal(?nhc, false)
-> has2(?do, 0.0)



DiameterOutputCompressedBeforeCalcRule:
DiameterOutputCompressed(?do)
-> has2(?do, 0.0) ^ has3(?do, 0.0)


DiameterOutputCalcRule:
DiameterOutput(?do) ^ hasSlipRingTorqueSensorAbsolutEncoderSensorPCBMatch(?do, ?gsrtsabspcb) ^ hasAbsoluteEncoderSensorPCBMatch(?gsrtsabspcb, ?abspcb) ^ hasSensorPCBOutputVariants(?abspcb, ?spcbv) ^ hasGearBox(?spcbv, ?g) ^ hasCircularSplineScrew(?g, ?s_g_cs) ^ hasCurrentRequirement(?do, ?r) ^
has2(?do, ?height_wiring) ^ has3(?do, ?D_electro_output) ^
hasDimensionOuterDiameter_D_unit_mm(?g, ?D_g) ^ hasDimensionOuterDiameter_D_unit_mm(?s_g_cs, ?D_s_g_cs) ^ hasThicknessOutputCaseReq_D_unit_mm(?r, ?D_oc) ^ 
swrlb:multiply(?D_w2, ?height_wiring, 2.0) ^ swrlb:multiply(?D_oc2, ?D_oc, 2.0) ^ swrlb:add(?temp1, ?D_g, ?D_w2) ^ swrlb:add(?D_max1, ?temp1, ?D_oc2) ^
swrlb:multiply(?D_s_g_cs2, 2.0, ?D_s_g_cs) ^ swrlb:add(?D_max2, ?D_s_g_cs2, ?D_electro_output)
-> hasMax1_1(?do, ?D_max1) ^ hasMax1_2(?do, ?D_max2)



DiameterOutputEvaluate1Rule:
DiameterOutput(?do) ^ hasMax1_1(?do, ?D_max1) ^ hasMax1_2(?do, ?D_max2) ^ swrlb:greaterThan(?D_max1, ?D_max2) -> has1(?do, ?D_max1)

DiameterOutputEvaluate2Rule:
DiameterOutput(?do) ^ hasMax1_1(?do, ?D_max1) ^ hasMax1_2(?do, ?D_max2) ^ swrlb:lessThanOrEqual(?D_max1, ?D_max2) -> has1(?do, ?D_max2)



DiameterOutputLinearSatisfyRule:
DiameterOutputLinear(?do) ^ has1(?do, ?D_out) ^ hasCurrentRequirement(?do, ?r) ^ hasDimensionOuterDiameterReqMax_D_unit_mm(?r, ?D_req_max) ^ swrlb:lessThanOrEqual(?D_out, ?D_req_max) -> SatisfiedDiameterOutputLinear(?do)

DiameterOutputCompressedSatisfyRule:
DiameterOutputCompressed(?do) ^ has1(?do, ?D_out) ^ hasCurrentRequirement(?do, ?r) ^ hasDimensionOuterDiameterReqMax_D_unit_mm(?r, ?D_req_max) ^ swrlb:lessThanOrEqual(?D_out, ?D_req_max) -> SatisfiedDiameterOutputCompressed(?do)



DiameterOutputBearingCalcRule:
DiameterOutputBearing(?dob) ^ hasOutputBearing(?dob, ?ob) ^ hasScrew(?ob, ?s_ob) ^
hasDimensionOuterDiameter_D_unit_mm(?ob, ?D_ob) ^ hasDimensionOuterDiameter_D_unit_mm(?s_ob, ?D_s_ob) ^
swrlb:multiply(?D_s_ob2, 2.0, ?D_s_ob) ^ swrlb:add(?D_dob, ?D_ob, ?D_s_ob2) ^
-> hasDimensionOuterDiameter_D_unit_mm(?dob, ?D_dob)


DiameterOutputBearingOutputLinearCalcRule:
DiameterOutputBearingOutputLinear(?dob) ^ hasDiameterOutput(?dob, ?do) ^ hasOutputBearing(?dob, ?ob) ^ hasScrew(?ob, ?s_ob) ^ hasSlipRingTorqueSensorAbsolutEncoderSensorPCBMatch(?do, ?gsrtsabspcb) ^ hasAbsoluteEncoderSensorPCBMatch(?gsrtsabspcb, ?abspcb) ^ hasSensorPCBOutputVariants(?abspcb, ?spcbv) ^ hasGearBox(?spcbv, ?g) ^ hasFlexSplineScrew(?g, ?s_g_fs) ^ hasSlipRingTorqueSensorMatch(?gsrtsabspcb, ?srtsm) ^ hasSlipRing(?srtsm, ?sr) ^ hasTorqueSensor(?srtsm, ?tos) ^
hasDimensionOuterDiameter_D_unit_mm(?s_ob, ?D_s_ob) ^ hasDimensionInnerDiameter_d_unit_mm(?ob, ?d_ob) ^ hasDimensionOuterDiameter_D_unit_mm(?s_g_fs, ?D_s_g_fs) ^ hasDimensionOuterDiameter_D_unit_mm(?sr, ?D_sr) ^ hasDimensionOuterDiameter_D_unit_mm(?tos, ?D_ts) ^
swrlb:multiply(?D_s_ob2, 2.0, ?D_s_ob) ^ swrlb:multiply(?D_s_g_fs2, 2.0, ?D_s_g_fs) ^ swrlb:multiply(?D_ts2, 2.0, ?D_ts) ^ swrlb:subtract(?temp1, ?d_ob, ?D_s_ob2) ^ swrlb:subtract(?temp2, ?temp1, ?D_s_g_fs2) ^ swrlb:subtract(?d_dob, ?temp2, ?D_ts2) ^ swrlb:greaterThanOrEqual(?d_dob, ?D_sr)
-> HalfSatisfiedDiameterOutputBearingOutputLinear(?dob) ^ hasDimensionInnerDiameter_d_unit_mm(?dob, ?d_dob)




DiameterOutputBearingOutputLinearPossibleUnsatisfied1Rule:
HalfSatisfiedDiameterOutputBearingOutputLinear(?dob) ^ hasDiameterOutput(?dob, ?do)
hasDimensionOuterDiameter_D_unit_mm(?dob, ?D_dob) ^ has1(?do, ?D_do)
swrlb:greaterThan(?D_dob, ?D_do)
-> PossibleUnsatisfiedDiameterOutputBearingOutputLinear(?dob) ^ hasDimensionOuterDiameter_D_unit_mm(?do, ?D_dob)

DiameterOutputBearingOutputLinearPossibleUnsatisfied2Rule:
HalfSatisfiedDiameterOutputBearingOutputLinear(?dob) ^ hasDiameterOutput(?dob, ?do)
hasDimensionOuterDiameter_D_unit_mm(?dob, ?D_dob) ^ has1(?do, ?D_do)
swrlb:lessThanOrEqual(?D_dob, ?D_do)
-> HalfPossibleUnsatisfiedSatisfiedDiameterOutputBearingOutputLinear(?dob) ^ hasDimensionOuterDiameter_D_unit_mm(?do, ?D_do)

DiameterOutputBearingOutputLinearPossibleUnsatisfied3Rule:
HalfPossibleUnsatisfiedSatisfiedDiameterOutputBearingOutputLinear(?dob1) ^ HalfPossibleUnsatisfiedSatisfiedDiameterOutputBearingOutputLinear(?dob2) ^
hasDiameterOutput(?dob1, ?do) ^
hasDiameterOutput(?dob2, ?do) ^
hasDimensionOuterDiameter_D_unit_mm(?dob1, ?D_dob1) ^ hasDimensionOuterDiameter_D_unit_mm(?dob2, ?D_dob2) ^
swrlb:greaterThan(?D_dob1, ?D_dob2) ^ swrlb:lessThan(?D_dob2, ?D_dob1)
-> PossibleUnsatisfiedDiameterOutputBearingOutputLinear(?dob2)

DiameterOutputBearingOutputLinearPossibleSatisfiedRule:
HalfPossibleUnsatisfiedSatisfiedDiameterOutputBearingOutputLinear(?dob1) ^ HalfPossibleUnsatisfiedSatisfiedDiameterOutputBearingOutputLinear(?dob2) ^
hasDiameterOutput(?dob1, ?do) ^
hasDiameterOutput(?dob2, ?do) ^
hasDimensionOuterDiameter_D_unit_mm(?dob1, ?D_dob1) ^ hasDimensionOuterDiameter_D_unit_mm(?dob2, ?D_dob2) ^
swrlb:equal(?D_dob1, ?D_dob2)
-> PossibleSatisfiedDiameterOutputBearingOutputLinear(?dob1) ^ PossibleSatisfiedDiameterOutputBearingOutputLinear(?dob2)


DiameterOutputBearingOutputLinearBackupSatisfiedRule:
BackupSatisfiedDiameterOutputBearingOutputLinear(?dob1) ^ BackupSatisfiedDiameterOutputBearingOutputLinear(?dob2) ^
hasDiameterOutput(?dob1, ?do) ^
hasDiameterOutput(?dob2, ?do) ^
hasDimensionInnerDiameter_d_unit_mm(?dob1, ?d_dob1) ^ hasDimensionInnerDiameter_d_unit_mm(?dob2, ?d_dob2) ^
swrlb:greaterThan(?d_dob2, ?d_dob1) ^ swrlb:lessThan(?d_dob1, ?d_dob2)
-> UnsatisfiedDiameterOutputBearingOutputLinear(?dob2)

DiameterOutputBearingOutputLinearBackupPossibleSatisfiedRule:
BackupSatisfiedDiameterOutputBearingOutputLinear(?dob1) ^ BackupSatisfiedDiameterOutputBearingOutputLinear(?dob2) ^
hasDiameterOutput(?dob1, ?do) ^
hasDiameterOutput(?dob2, ?do) ^
hasDimensionInnerDiameter_d_unit_mm(?dob1, ?d_dob1) ^ hasDimensionInnerDiameter_d_unit_mm(?dob2, ?d_dob2) ^
swrlb:equal(?d_dob1, ?d_dob2)
-> BackupPossibleSatisfiedDiameterOutputBearingOutputLinear(?dob1) ^ BackupPossibleSatisfiedDiameterOutputBearingOutputLinear(?dob2)



DiameterOutputBearingOutputCompressedCalcRule:
DiameterOutputBearingOutputCompressed(?dob) ^ hasDiameterOutput(?dob, ?do) ^ hasOutputBearing(?dob, ?ob) ^ hasSlipRingTorqueSensorAbsolutEncoderSensorPCBMatch(?do, ?gsrtsabspcb) ^ hasAbsoluteEncoderSensorPCBMatch(?gsrtsabspcb, ?abspcb) ^ hasSensorPCBOutputVariants(?abspcb, ?spcbv) ^ hasGearBox(?spcbv, ?g) ^
hasDimensionOuterDiameter_D_unit_mm(?ob, ?D_ob) ^ hasDimensionInnerDiameter_d_unit_mm(?ob, ?d_ob) ^ hasDimensionOuterDiameterFlexSpline_a_unit_mm(?g, ?D_a_g) ^
swrlb:subtract(?ob_diff, ?D_ob, ?d_ob) ^ swrlb:divide(?D_bearingSet, ?ob_diff, 2.0) ^ swrlb:subtract(?d_dob, ?d_ob, ?D_bearingSet) ^
swrlb:greaterThanOrEqual(?d_dob, ?D_a_g)
-> HalfSatisfiedDiameterOutputBearingOutputCompressed(?dob) ^ hasDimensionInnerDiameter_d_unit_mm(?dob, ?d_dob)


DiameterOutputBearingOutputCompressedSatisfiedRule:
HalfSatisfiedDiameterOutputBearingOutputCompressed(?dob1) ^ HalfSatisfiedDiameterOutputBearingOutputCompressed(?dob2) ^
hasDiameterOutput(?dob1, ?do) ^
hasDiameterOutput(?dob2, ?do) ^
hasDimensionOuterDiameter_D_unit_mm(?dob1, ?D_dob1) ^ hasDimensionOuterDiameter_D_unit_mm(?dob2, ?D_dob2) ^
swrlb:greaterThan(?D_dob2, ?D_dob1) ^ swrlb:lessThan(?D_dob1, ?D_dob2)
-> UnsatisfiedDiameterOutputBearingOutputCompressed(?dob2)

DiameterOutputBearingOutputCompressedPossibleSatisfiedRule:
HalfSatisfiedDiameterOutputBearingOutputCompressed(?dob1) ^ HalfSatisfiedDiameterOutputBearingOutputCompressed(?dob2) ^
hasDiameterOutput(?dob1, ?do) ^
hasDiameterOutput(?dob2, ?do) ^
hasDimensionOuterDiameter_D_unit_mm(?dob1, ?D_dob1) ^ hasDimensionOuterDiameter_D_unit_mm(?dob2, ?D_dob2) ^
swrlb:equal(?D_dob1, ?D_dob2)
-> PossibleSatisfiedDiameterOutputBearingOutputCompressed(?dob1) ^ PossibleSatisfiedDiameterOutputBearingOutputCompressed(?dob2)


DiameterOutputBearingOutputCompressedEvaluate1Rule:
SatisfiedDiameterOutputBearingOutputCompressed(?dob) ^ hasDiameterOutput(?dob, ?do)
hasDimensionOuterDiameter_D_unit_mm(?dob, ?D_dob) ^ has1(?do, ?D_do)
swrlb:greaterThan(?D_dob, ?D_do)
-> hasDimensionOuterDiameter_D_unit_mm(?do, ?D_dob)

DiameterOutputBearingOutputCompressedEvaluate2Rule:
SatisfiedDiameterOutputBearingOutputCompressed(?dob) ^ hasDiameterOutput(?dob, ?do)
hasDimensionOuterDiameter_D_unit_mm(?dob, ?D_dob) ^ has1(?do, ?D_do)
swrlb:lessThanOrEqual(?D_dob, ?D_do)
-> hasDimensionOuterDiameter_D_unit_mm(?do, ?D_do)


DiameterOutputBearingOutputCompressedForCompressedSatisfy1Rule:
SatisfiedDiameterOutputBearingOutputCompressed(?dob) ^ hasDiameterOutput(?dob, ?do) ^ hasSlipRingTorqueSensorAbsolutEncoderSensorPCBMatch(?do, ?gsrtsabspcb) ^ hasSlipRingTorqueSensorMatch(?gsrtsabspcb, ?srtsm) ^ hasTorqueSensor(?srtsm, ?tos) ^ hasCurrentRequirement(?lo, ?r) ^
StrainGaugeBased_SpokeWheel(?tos) ^
chooseOutputStructure(?r, ?cos) ^ swrlb:equal(?cos, "Any")
-> SatisfiedDiameterOutputBearingOutputCompressedForCompressed(?dob)

DiameterOutputBearingOutputCompressedForCompressedSatisfy2Rule:
SatisfiedDiameterOutputBearingOutputCompressed(?dob) ^ hasDiameterOutput(?dob, ?do) ^ hasSlipRingTorqueSensorAbsolutEncoderSensorPCBMatch(?do, ?gsrtsabspcb) ^ hasSlipRingTorqueSensorMatch(?gsrtsabspcb, ?srtsm) ^ hasTorqueSensor(?srtsm, ?tos) ^ hasCurrentRequirement(?lo, ?r) ^
NoTorqueSensor(?tos) ^
chooseOutputStructure(?r, ?cos) ^ swrlb:equal(?cos, "Any")
-> SatisfiedDiameterOutputBearingOutputCompressedForCompressed(?dob)

DiameterOutputBearingOutputCompressedForCompressedSatisfy3Rule:
SatisfiedDiameterOutputBearingOutputCompressed(?dob) ^ hasDiameterOutput(?dob, ?do) ^ hasSlipRingTorqueSensorAbsolutEncoderSensorPCBMatch(?do, ?gsrtsabspcb) ^ hasSlipRingTorqueSensorMatch(?gsrtsabspcb, ?srtsm) ^ hasTorqueSensor(?srtsm, ?tos) ^ hasCurrentRequirement(?lo, ?r) ^
StrainGaugeBased_SpokeWheel(?tos) ^
chooseOutputStructure(?r, ?cos) ^ swrlb:equal(?cos, "Compressed")
-> SatisfiedDiameterOutputBearingOutputCompressedForCompressed(?dob)

DiameterOutputBearingOutputCompressedForCompressedSatisfy4Rule:
SatisfiedDiameterOutputBearingOutputCompressed(?dob) ^ hasDiameterOutput(?dob, ?do) ^ hasSlipRingTorqueSensorAbsolutEncoderSensorPCBMatch(?do, ?gsrtsabspcb) ^ hasSlipRingTorqueSensorMatch(?gsrtsabspcb, ?srtsm) ^ hasTorqueSensor(?srtsm, ?tos) ^ hasCurrentRequirement(?lo, ?r) ^
NoTorqueSensor(?tos) ^
chooseOutputStructure(?r, ?cos) ^ swrlb:equal(?cos, "Compressed")
-> SatisfiedDiameterOutputBearingOutputCompressedForCompressed(?dob)



DiameterOutputBearingOutputCompressedForTwoSideSatisfy1Rule:
SatisfiedDiameterOutputBearingOutputCompressed(?dob) ^
chooseOutputStructure(?r, ?cos) ^ swrlb:equal(?cos, "Any")
-> SatisfiedDiameterOutputBearingOutputCompressedForTwoSide(?dob)

DiameterOutputBearingOutputCompressedForTwoSideSatisfy2Rule:
SatisfiedDiameterOutputBearingOutputCompressed(?dob) ^
chooseOutputStructure(?r, ?cos) ^ swrlb:equal(?cos, "TwoSide")
-> SatisfiedDiameterOutputBearingOutputCompressedForTwoSide(?dob)



DiameterEvaluate1Rule:
Diameter(?d) ^ hasLength(?d, ?l) ^ hasLengthElektro(?l, ?le) ^ hasLengthOutput(?le, ?lo) ^ hasLengthInput(?lo, ?li) ^ hasDiameterInputDriveBearingMatch(?li, ?didbm) ^ hasDiameterInput(?didbm, ?di) ^ hasDiameterOutputBearing(?lo, ?dob) ^ hasDiameterOutput(?dob, ?do) ^
hasDimensionOuterDiameter_D_unit_mm(?di, ?D_di) ^ hasDimensionOuterDiameter_D_unit_mm(?do, ?D_do) ^
swrlb:greaterThan(?D_di, ?D_do)
-> hasMax1_1(?d, ?D_di)

DiameterEvaluate2Rule:
Diameter(?d) ^ hasLength(?d, ?l) ^ hasLengthElektro(?l, ?le) ^ hasLengthOutput(?le, ?lo) ^ hasLengthInput(?lo, ?li) ^ hasDiameterInputDriveBearingMatch(?li, ?didbm) ^ hasDiameterInput(?didbm, ?di) ^ hasDiameterOutputBearing(?lo, ?dob) ^ hasDiameterOutput(?dob, ?do) ^
hasDimensionOuterDiameter_D_unit_mm(?di, ?D_di) ^ hasDimensionOuterDiameter_D_unit_mm(?do, ?D_do) ^
swrlb:lessThanOrEqual(?D_di, ?D_do)
-> hasMax1_1(?d, ?D_do)

DiameterEvaluate3Rule:
Diameter(?d) ^ hasLength(?d, ?l) ^ hasLengthElektro(?l, ?le) ^ hasLengthOutput(?le, ?lo) ^ hasLengthInput(?lo, ?li) ^ hasDiameterInputDriveBearingMatch(?li, ?didbm) ^ hasDiameterInput(?didbm, ?di) ^ hasDiameterElektro(?di, ?de) ^
hasMax1_1(?d, ?D_max1) ^ hasDimensionOuterDiameter_D_unit_mm(?de, ?D_e) ^
swrlb:greaterThan(?D_max1, ?D_e)
-> hasDimensionOuterDiameter_D_unit_mm(?d, ?D_max1)

DiameterEvaluate4Rule:
Diameter(?d) ^ hasLength(?d, ?l) ^ hasLengthElektro(?l, ?le) ^ hasLengthOutput(?le, ?lo) ^ hasLengthInput(?lo, ?li) ^ hasDiameterInputDriveBearingMatch(?li, ?didbm) ^ hasDiameterInput(?didbm, ?di) ^ hasDiameterElektro(?di, ?de) ^
hasMax1_1(?d, ?D_max1) ^ hasDimensionOuterDiameter_D_unit_mm(?de, ?D_e) ^
swrlb:lessThanOrEqual(?D_max1, ?D_e)
-> hasDimensionOuterDiameter_D_unit_mm(?d, ?D_e)

DiameterSatisfyRule:
Diameter(?d) ^ hasDimensionOuterDiameter_D_unit_mm(?d, ?D_ges) ^ hasCurrentRequirement(?d, ?r) ^ hasDimensionOuterDiameterReqMax_D_unit_mm(?r, ?D_req_max) ^ swrlb:lessThanOrEqual(?D_ges, ?D_req_max) ^ hasDimensionOuterDiameterReqMin_D_unit_mm(?r, ?D_req_min) ^ swrlb:greaterThanOrEqual(?D_ges, ?D_req_min) -> SatisfiedDiameter(?d)



HeightBeforeEvaluateAndCalc1Rule:
Height(?h) ^ hasDiameter(?h, ?d) ^ hasLength(?d, ?l) ^ hasLengthElektro(?l, ?le) ^ hasLengthOutput(?le, ?lo) ^ hasLengthInput(?lo, ?li) ^ hasDiameterInputDriveBearingMatch(?li, ?didbm) ^ hasDiameterInput(?didbm, ?di) ^ hasDiameterElektro(?di, ?de) ^ hasSlipRingTorqueSensorAbsolutEncoderSensorPCBMatch(?de, ?gsrtsabspcb) ^ hasAbsoluteEncoderSensorPCBMatch(?gsrtsabspcb, ?abspcb) ^ hasSensorPCBOutputVariants(?abspcb, ?spcbv) ^ hasGearBox(?spcbv, ?g) ^ hasMotorControllerPositionMatch(?de, ?mcpm) ^ hasCurrentRequirement(?h, ?r) ^ hasConstant(?h, ?con) ^
hasDimensionLength_L_unit_mm(?le, ?L_le) ^ hasThicknessCoverReq_t_unit_mm(?r, ?t_req_c) ^
hasDimensionLength_L_unit_mm(?li, ?L_li) ^ hasDimensionScrewInnerDiameterCircularSplineM_d_unit_mm(?g, ?d_g_cs) ^ has3(?mcpm, ?L_tangential) ^
swrlb:multiply(?d_s15, 1.5, ?d_g_cs) ^ swrlb:add(?temp1, ?d_s15, ?L_tangential) ^ swrlb:subtract(?L_max1, ?temp1, ?L_li) ^
swrlb:subtract(?L_max2, ?L_le, ?t_req_c) ^
swrlb:lessThanOrEqual(?L_max1, ?L_max2) ^
hasDimensionOuterDiameter_D_unit_mm(?di, ?D_di) ^ has4(?mcpm, ?H_tangential) ^ safetyDistanceElectro(?con, ?sde_con) ^ hasDimensionOuterDiameter_D_unit_mm(?d, ?D_ges) ^
swrlb:divide(?D_diHalf, ?D_di, 2.0) ^ swrlb:add(?temp2, ?D_diHalf, ?H_tangential) ^ swrlb:add(?temp3, ?temp2, ?sde_con) ^ swrlb:divide(?D_gesHalf, ?D_ges, 2.0) ^ swrlb:subtract(?H_overlap, ?temp3, ?D_gesHalf) ^ swrlb:add(?H_max2, ?H_overlap, ?D_ges)
-> hasMax1_1(?h, ?D_ges) ^ hasMax1_2(?h, ?H_max2)


HeightBeforeEvaluateAndCalc2Rule:
Height(?h) ^ hasDiameter(?h, ?d) ^ hasLength(?d, ?l) ^ hasLengthElektro(?l, ?le) ^ hasLengthOutput(?le, ?lo) ^ hasLengthInput(?lo, ?li) ^ hasDiameterInputDriveBearingMatch(?li, ?didbm) ^ hasDiameterInput(?didbm, ?di) ^ hasDiameterElektro(?di, ?de) ^ hasSlipRingTorqueSensorAbsolutEncoderSensorPCBMatch(?de, ?gsrtsabspcb) ^ hasAbsoluteEncoderSensorPCBMatch(?gsrtsabspcb, ?abspcb) ^ hasSensorPCBOutputVariants(?abspcb, ?spcbv) ^ hasGearBox(?spcbv, ?g) ^ hasMotorControllerPositionMatch(?de, ?mcpm) ^ hasCurrentRequirement(?h, ?r) ^ hasConstant(?h, ?con) ^
hasDimensionLength_L_unit_mm(?le, ?L_le) ^ hasThicknessCoverReq_t_unit_mm(?r, ?t_req_c) ^
hasDimensionLength_L_unit_mm(?li, ?L_li) ^ hasDimensionScrewInnerDiameterCircularSplineM_d_unit_mm(?g, ?d_g_cs) ^ has3(?mcpm, ?L_tangential) ^
swrlb:multiply(?d_s15, 1.5, ?d_g_cs) ^ swrlb:add(?temp1, ?d_s15, ?L_tangential) ^ swrlb:subtract(?L_max1, ?temp1, ?L_li) ^
swrlb:subtract(?L_max2, ?L_le, ?t_req_c) ^
swrlb:greaterThan(?L_max1, ?L_max2) ^
has4(?mcpm, ?H_tangential) ^ safetyDistanceElectro(?con, ?sde_con) ^ hasDimensionOuterDiameter_D_unit_mm(?d, ?D_ges) ^
swrlb:add(?H_overlap, ?H_tangential, ?sde_con) ^ swrlb:add(?H_max2, ?H_overlap, ?D_ges)
-> hasMax1_1(?h, ?D_ges) ^ hasMax1_2(?h, ?H_max2)



HeightEvaluate1Rule:
Height(?h) ^
hasMax1_1(?h, ?H_max1) ^ hasMax1_2(?h, ?H_max2) ^
swrlb:greaterThan(?H_max1, ?H_max2)
-> hasDimensionHeight_H_unit_mm(?h, ?H_max1)

HeightEvaluate2Rule:
Height(?h) ^
hasMax1_1(?h, ?H_max1) ^ hasMax1_2(?h, ?H_max2) ^
swrlb:lessThanOrEqual(?H_max1, ?H_max2)
-> hasDimensionHeight_H_unit_mm(?h, ?H_max2)


HeightSatisfyRule:
Height(?h) ^ hasCurrentRequirement(?h, ?r) ^
hasDimensionHeight_H_unit_mm(?h, ?H_max) ^ hasMaximumAdditionalHeightpReqMax_H_unit_mm(?r, ?H_req_max) ^ hasDimensionOuterDiameterReqMax_D_unit_mm(?r, ?D_req_max) ^
swrlb:add(?H_max_allowed, ?H_req_max, ?D_req_max) ^
swrlb:lessThanOrEqual(?H_max, ?H_max_allowed)
-> SatisfiedHeight(?h)



SACunitMotorGearBoxMatchSatisfyRule:
SACunit(?sac) ^ hasHeight(?sac, ?h) ^ hasDiameter(?h, ?d) ^ hasLength(?d, ?l) ^ hasLengthElektro(?l, ?le) ^ hasLengthOutput(?le, ?lo) ^ hasDiameterOutputBearing(?lo, ?dob) ^ hasDiameterOutput(?dob, ?do) ^ hasSlipRingTorqueSensorAbsolutEncoderSensorPCBMatch(?do, ?gsrtsabspcb) ^ hasAbsoluteEncoderSensorPCBMatch(?gsrtsabspcb, ?abspcb) ^ hasSensorPCBOutputVariants(?abspcb, ?spcbv) ^ hasGearBox(?spcbv, ?g) ^
hasLengthInput(?lo, ?li) ^ hasDiameterInputDriveBearingMatch(?li, ?didbm) ^ hasDiameterInput(?didbm, ?di) ^ hasDiameterElektro(?di, ?de) ^ hasMotor(?de, ?m) ^
SatisfiedMotorGearBoxMatchForSACunit(?ma) ^ hasMotor(?ma, ?m) ^ hasGearBox(?ma, ?g) ^
hasMaximalSpeedRes_n_max_unit_rpm(?ma, ?n_res) ^ hasPeakTorqueRes_T_max_unit_Nm(?ma, ?M_res)
-> SatisfiedRotationSpeed(?sac) ^ hasMaximalSpeedRes_n_max_unit_rpm(?sac, ?n_res) ^ SatisfiedPeakTorque(?sac) ^ hasPeakTorqueRes_T_max_unit_Nm(?sac, ?M_res)



SACunitPowerDensityCalcRule:
SACunit(?sac) ^ hasHeight(?sac, ?h) ^ hasDiameter(?h, ?d) ^ hasLength(?d, ?l) ^ hasLengthElektro(?l, ?le) ^ hasLengthOutput(?le, ?lo) ^ hasLengthInput(?lo, ?li) ^ hasDiameterInputDriveBearingMatch(?li, ?didbm) ^ hasDiameterInput(?didbm, ?di) ^ hasDiameterElektro(?di, ?de) ^ hasDiameterOutputBearing(?lo, ?dob) ^ hasDiameterOutput(?dob, ?do) ^
hasDimensionOuterDiameter_D_unit_mm(?d, ?D_ges) ^ hasDimensionLength_L_unit_mm(?l, ?L_res) ^ hasDimensionHeight_H_unit_mm(?h, ?H_res) ^
hasDimensionLength_L_unit_mm(?li, ?L_drive) ^ hasDimensionLength_L_unit_mm(?lo, ?L_output) ^ hasDimensionLength_L_unit_mm(?le, ?L_elektro) ^
hasDimensionOuterDiameter_D_unit_mm(?do, ?D_output) ^ hasDimensionOuterDiameter_D_unit_mm(?de, ?D_elektro) ^ hasDimensionOuterDiameter_D_unit_mm(?di, ?D_drive) ^
hasMaximalSpeedRes_n_max_unit_rpm(?sac, ?n_res) ^ hasPeakTorqueRes_T_max_unit_Nm(?sac, ?M_res) ^
swrlb:multiply(?D_output2, ?D_output, ?D_output) ^ swrlb:multiply(?D_elektro2, ?D_elektro, ?D_elektro) ^ swrlb:multiply(?D_drive2, ?D_drive, ?D_drive) ^
swrlb:multiply(?fac_output, ?L_output, ?D_output2) ^ swrlb:multiply(?fac_drive, ?L_drive, ?D_drive2) ^ swrlb:multiply(?fac_elektro, ?L_elektro, ?D_elektro2) ^
swrlb:add(?temp1, ?fac_output, ?fac_elektro) ^ swrlb:add(?temp2, ?temp1, ?fac_drive) ^ swrlb:multiply(?temp3, ?n_res, ?M_res) ^ swrlb:divide(?pdFac, ?temp3, ?temp2) ^ swrlb:multiply(?pdFac2, 8000000.0, ?pdFac) ^ swrlb:divide(?pd, ?pdFac2, 60.0)
-> SatisfiedOuterDiameter(?sac) ^ hasDimensionOuterDiameter_D_unit_mm(?sac, ?D_ges) ^ SatisfiedDimensionLength(?sac) ^ hasDimensionLength_L_unit_mm(?sac, ?L_res) ^ hasDimensionHeight_H_unit_mm(?sac, ?H_res) ^ hasDimensionLengthDrive_L_unit_mm(?sac, ?L_drive) ^ hasDimensionLengthOutput_L_unit_mm(?sac, ?L_output) ^ hasDimensionLengthElektro_L_unit_mm(?sac, ?L_elektro) ^ hasDimensionOuterDiameterOutput_D_unit_mm(?sac, ?D_output) ^ hasDimensionOuterDiameterElektro_D_unit_mm(?sac, ?D_elektro) ^ hasDimensionOuterDiameterDrive_D_unit_mm(?sac, ?D_drive) ^ hasPowerDensity(?sac, ?pd) ^ hasComplianceIndex(?sac, 1.0) ^ hasPerformanceIndex(?sac, 1.0)



SACunitWeightCalcRule:
SACunit(?sac) ^ hasHeight(?sac, ?h) ^ hasDiameter(?h, ?d) ^ hasLength(?d, ?l) ^ hasLengthElektro(?l, ?le) ^ hasLengthOutput(?le, ?lo) ^ hasLengthInput(?lo, ?li) ^ hasDiameterInputDriveBearingMatch(?li, ?didbm) ^ hasDiameterInput(?didbm, ?di) ^ hasDiameterElektro(?di, ?de) ^ hasMotorControllerPositionMatch(?de, ?mcpm) ^ hasMotorController(?mcpm, ?mc) ^ hasIncrementalEncoderHallSensorMatch(?li, ?iehs) ^ hasIncrementalEncoder(?iehs, ?ie) ^ hasHallSensor(?iehs, ?hs) ^ hasMotor(?de, ?m) ^ hasMotorBrake(?m, ?mb) ^ hasDiameterOutputBearing(?lo, ?dob) ^ hasDiameterOutput(?dob, ?do) ^ hasDriveBearing(?didbm, ?db) ^ hasSlipRingTorqueSensorAbsolutEncoderSensorPCBMatch(?do, ?gsrtsabspcb) ^ hasTorqueSensorAbsolutEncoderMatch(?gsrtsabspcb, ?tsab) ^ hasFlexSplineScrew(?g, ?s_g_fs) ^ hasCircularSplineScrew(?g, ?s_g_cs) ^ hasWaveGeneratorScrew(?g, ?s_g_wg) ^ hasSlipRingTorqueSensorMatch(?gsrtsabspcb, ?srtsm) ^ hasSlipRing(?srtsm, ?sr) ^ hasTorqueSensor(?srtsm, ?tos) ^ hasAbsoluteEncoderSensorPCBMatch(?gsrtsabspcb, ?abspcb) ^ hasAbsoluteEncoder(?abspcb, ?ab) ^ hasSensorPCBOutputVariants(?abspcb, ?spcbv) ^ hasGearBox(?spcbv, ?g) ^ hasSensorPCB(?spcbv, ?spcb) ^ hasOutputBearing(?dob, ?ob) ^ hasScrew(?ob, ?s_ob) ^
hasNumberOfAbsolutEncoder(?tsab, ?ab_count) ^ hasNumberOfOutputBearings(?lo, ?ob_count) ^
hasWeight_m_unit_kg(?ab, ?m_ab) ^ hasWeight_m_unit_kg(?ob, ?m_ob) ^ hasWeight_m_unit_kg(?s_ob, ?s_ob_w) ^
swrlb:multiply(?m_ab_tot, ?ab_count, ?m_ab) ^ swrlb:multiply(?m_ob_tot, ?ob_count, ?m_ob) ^ swrlb:multiply(?s_ob_w_temp, ?ob_count, ?s_ob_w) ^
hasScrewCountFlexSpline(?g, ?g_sc_fs) ^ hasScrewCountCircularSpline(?g, ?g_sc_cp) ^ hasScrewCountWaveGenerator(?g, ?g_sc_wg) ^ hasScrewCount(?ob, ?ob_sc) ^
hasWeight_m_unit_kg(?m, ?m_m) ^ hasWeight_m_unit_kg(?mb, ?m_mb) ^ hasWeight_m_unit_kg(?g, ?m_g) ^ hasWeight_m_unit_kg(?db, ?m_db) ^ swrlb:multiply(?m_dbs, 2.0, ?m_db) ^ hasWeight_m_unit_kg(?sr, ?m_sr) ^ hasWeight_m_unit_kg(?ie, ?m_ie) ^ hasWeight_m_unit_kg(?hs, ?m_hs) ^ hasWeight_m_unit_kg(?tos, ?m_tos) ^ hasWeight_m_unit_kg(?spcb, ?m_spcb) ^ hasWeight_m_unit_kg(?mc, ?m_mc) ^
hasWeight_m_unit_kg(?s_g_fs, ?s_g_fs_w) ^ hasWeight_m_unit_kg(?s_g_cs, ?s_g_cs_w) ^ hasWeight_m_unit_kg(?s_g_wg, ?s_g_wg_w) ^ 
swrlb:multiply(?s_g_fs_w_tot, ?g_sc_fs, ?s_g_fs_w) ^ swrlb:multiply(?s_g_cs_w_tot, ?g_sc_cp, ?s_g_cs_w) ^ swrlb:multiply(?s_g_wg_w_tot, ?g_sc_wg, ?s_g_wg_w) ^ swrlb:multiply(?s_ob_w_tot, ?ob_sc, ?s_ob_w_temp) ^
swrlb:add(?temp1, ?m_m, ?m_g) ^ swrlb:add(?temp2, ?temp1, ?m_dbs) ^ swrlb:add(?temp3, ?temp2, ?m_ab_tot) ^ swrlb:add(?temp4, ?temp3, ?m_sr) ^ swrlb:add(?temp5, ?temp4, ?m_ie) ^ swrlb:add(?temp6, ?temp5, ?m_tos) ^ swrlb:add(?temp7, ?temp6, ?m_spcb) ^ swrlb:add(?temp8, ?temp7, ?m_mc) ^ swrlb:add(?temp9, ?temp8, ?s_g_fs_w_tot) ^ swrlb:add(?temp10, ?temp9, ?s_g_cs_w_tot) ^ swrlb:add(?temp11, ?temp10, ?s_g_wg_w_tot) ^ swrlb:add(?temp12, ?temp11, ?s_ob_w_tot) ^ swrlb:add(?temp13, ?temp12, ?m_mb) ^ swrlb:add(?temp14, ?temp13, ?m_hs) ^ swrlb:add(?m_ges, ?temp14, ?m_ob_tot)
-> hasWeight_m_unit_kg(?sac, ?m_ges)

SACunitWeightSatisfyRule:
SACunit(?sac) ^ hasWeight_m_unit_kg(?sac, ?m_ges) ^ hasCurrentRequirement(?sac, ?r) ^ hasWeightReqMax_m_unit_kg(?r, ?m_req_max) ^ swrlb:lessThanOrEqual(?m_ges, ?m_req_max) ^ hasWeightReqMin_m_unit_kg(?r, ?m_req_min) ^ swrlb:greaterThanOrEqual(?m_ges, ?m_req_min) -> SatisfiedWeight(?sac)


SACunitSatisfyRule:
SACunit(?sac) ^ SatisfiedRotationSpeed(?sac) ^ SatisfiedPeakTorque(?sac) ^ SatisfiedDimensionLength(?sac) ^ SatisfiedOuterDiameter(?sac) ^ SatisfiedWeight(?sac) -> SatisfiedSACunit(?sac)



SACunitIsComposedOfRule:
SatisfiedSACunit(?sac) ^ hasHeight(?sac, ?h) ^ hasDiameter(?h, ?d) ^ hasLength(?d, ?l) ^ hasLengthElektro(?l, ?le) ^ hasLengthOutput(?le, ?lo) ^ hasLengthInput(?lo, ?li) ^ hasDiameterInputDriveBearingMatch(?li, ?didbm) ^ hasDiameterInput(?didbm, ?di) ^ hasDiameterElektro(?di, ?de) ^ hasMotorControllerPositionMatch(?de, ?mcpm) ^ hasMotorController(?mcpm, ?mc) ^ hasMotorControllerPosition(?mcpm, ?mcp) ^ hasIncrementalEncoderHallSensorMatch(?li, ?iehs) ^ hasIncrementalEncoder(?iehs, ?ie) ^ hasHallSensor(?iehs, ?hs) ^ hasMotor(?de, ?m) ^ hasMotorBrake(?m, ?mb) ^ hasDiameterOutputBearing(?lo, ?dob) ^ hasDiameterOutput(?dob, ?do) ^ hasDriveBearing(?didbm, ?db) ^ hasSlipRingTorqueSensorAbsolutEncoderSensorPCBMatch(?do, ?gsrtsabspcb) ^ hasFlexSplineScrew(?g, ?s_g_fs) ^ hasCircularSplineScrew(?g, ?s_g_cs) ^ hasWaveGeneratorScrew(?g, ?s_g_wg) ^ hasSlipRingTorqueSensorMatch(?gsrtsabspcb, ?srtsm) ^ hasSlipRing(?srtsm, ?sr) ^ hasTorqueSensor(?srtsm, ?tos) ^ hasAbsoluteEncoderSensorPCBMatch(?gsrtsabspcb, ?abspcb) ^ hasAbsoluteEncoder(?abspcb, ?ab) ^ hasSensorPCBOutputVariants(?abspcb, ?spcbv) ^ hasGearBox(?spcbv, ?g) ^ hasSensorPCB(?spcbv, ?spcb) ^ hasOutputBearing(?dob, ?ob) ^ hasScrew(?ob, ?s_ob) ^
-> isComposedOfIncrementalEncoder(?sac, ?ie) ^ isComposedOfHallSensor(?sac, ?hs) ^ isComposedOfMotor(?sac, ?m) ^ isComposedOfGearBox(?sac, ?g) ^ GearBoxCircularSplineScrew(?s_g_cs) ^ isComposedOfGearBoxCircularSplineScrew(?sac, ?s_g_cs) ^ GearBoxFlexSplineScrew(?s_g_fs) ^  isComposedOfGearBoxFlexSplineScrew(?sac, ?s_g_fs) ^ GearBoxWaveGeneratorScrew(?s_g_wg) ^  isComposedOfGearBoxWaveGeneratorScrew(?sac, ?s_g_wg) ^ isComposedOfDriveBearing(?sac, ?db) ^ isComposedOfOutputBearing(?sac, ?ob) ^ OutputBearingScrew(?s_ob) ^ isComposedOfOutputBearingScrew(?sac, ?s_ob) ^ isComposedOfMotorController(?sac, ?mc) ^ isComposedOfMotorControllerPosition(?sac, ?mcp) ^ isComposedOfSlipRing(?sac, ?sr) ^ isComposedOfTorqueSensor(?sac, ?tos) ^ isComposedOfAbsoluteEncoder(?sac, ?ab) ^ isComposedOfSensorPCB(?sac, ?spcb) ^ isComposedOfMotorBrake(?sac, ?mb) ^ isComposedOfDriveStructure(?sac, ?li) ^ isComposedOfOutputStructure(?sac, ?lo)



